/*
 * GameBrain API
 *
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using gamebrain.Model;
using gamebrain.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace gamebrain.Test.Model
{
    /// <summary>
    ///  Class for testing SearchResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SearchResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SearchResponse
        //private SearchResponse instance;

        public SearchResponseTests()
        {
            // TODO uncomment below to create an instance of SearchResponse
            //instance = new SearchResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchResponse
        /// </summary>
        [Fact]
        public void SearchResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" SearchResponse
            //Assert.IsType<SearchResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Sorting'
        /// </summary>
        [Fact]
        public void SortingTest()
        {
            // TODO unit test for the property 'Sorting'
        }

        /// <summary>
        /// Test the property 'ActiveFilterOptions'
        /// </summary>
        [Fact]
        public void ActiveFilterOptionsTest()
        {
            // TODO unit test for the property 'ActiveFilterOptions'
        }

        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }

        /// <summary>
        /// Test the property 'TotalResults'
        /// </summary>
        [Fact]
        public void TotalResultsTest()
        {
            // TODO unit test for the property 'TotalResults'
        }

        /// <summary>
        /// Test the property 'Limit'
        /// </summary>
        [Fact]
        public void LimitTest()
        {
            // TODO unit test for the property 'Limit'
        }

        /// <summary>
        /// Test the property 'Offset'
        /// </summary>
        [Fact]
        public void OffsetTest()
        {
            // TODO unit test for the property 'Offset'
        }

        /// <summary>
        /// Test the property 'Results'
        /// </summary>
        [Fact]
        public void ResultsTest()
        {
            // TODO unit test for the property 'Results'
        }

        /// <summary>
        /// Test the property 'FilterOptions'
        /// </summary>
        [Fact]
        public void FilterOptionsTest()
        {
            // TODO unit test for the property 'FilterOptions'
        }

        /// <summary>
        /// Test the property 'SortingOptions'
        /// </summary>
        [Fact]
        public void SortingOptionsTest()
        {
            // TODO unit test for the property 'SortingOptions'
        }
    }
}
