# coding: utf-8

"""
    GameBrain API

    GameBrain API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gamebrain.models.game_response import GameResponse

class TestGameResponse(unittest.TestCase):
    """GameResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GameResponse:
        """Test GameResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GameResponse`
        """
        model = GameResponse()
        if include_optional:
            return GameResponse(
                id = 56,
                name = '',
                image = '',
                gameplay = '',
                link = '',
                x_url = '',
                rating = gamebrain.models.game_response_rating.GameResponse_rating(
                    mean = 1.337, 
                    count = 56, 
                    mean_players = 1.337, 
                    count_players = 56, 
                    mean_critics = 1.337, 
                    count_critics = 56, ),
                description = '',
                short_description = '',
                release_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                developer = '',
                playtime = gamebrain.models.game_response_playtime.GameResponse_playtime(
                    percentiles = [
                        56
                        ], 
                    min = 56, 
                    median = 56, 
                    max = 56, 
                    mean = 1.337, 
                    mentions = 56, ),
                platforms = [
                    gamebrain.models.game_response_platforms_inner.GameResponse_platforms_inner(
                        value = '', 
                        name = '', )
                    ],
                tags = [
                    ''
                    ],
                genres = [
                    gamebrain.models.game_response_platforms_inner.GameResponse_platforms_inner(
                        value = '', 
                        name = '', )
                    ],
                genre = '',
                themes = [
                    gamebrain.models.game_response_platforms_inner.GameResponse_platforms_inner(
                        value = '', 
                        name = '', )
                    ],
                adult_only = True,
                play_modes = [
                    gamebrain.models.game_response_platforms_inner.GameResponse_platforms_inner(
                        value = '', 
                        name = '', )
                    ],
                screenshots = [
                    ''
                    ],
                videos = [
                    ''
                    ],
                offers = [
                    gamebrain.models.game_response_offers_inner.GameResponse_offers_inner(
                        price = gamebrain.models.game_response_offers_inner_price.GameResponse_offers_inner_price(
                            currency = '', 
                            discount_percent = 1.337, 
                            value = 1.337, 
                            initial = 1.337, ), 
                        store_name = '', 
                        platform = '', 
                        title = '', 
                        url = '', )
                    ],
                official_stores = [
                    gamebrain.models.game_response_official_stores_inner.GameResponse_official_stores_inner(
                        source = '', 
                        url = '', )
                    ],
                micro_trailer = ''
            )
        else:
            return GameResponse(
        )
        """

    def testGameResponse(self):
        """Test GameResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
