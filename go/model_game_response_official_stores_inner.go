/*
GameBrain API

GameBrain API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamebrain

import (
	"encoding/json"
)

// checks if the GameResponseOfficialStoresInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameResponseOfficialStoresInner{}

// GameResponseOfficialStoresInner struct for GameResponseOfficialStoresInner
type GameResponseOfficialStoresInner struct {
	Source *string `json:"source,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewGameResponseOfficialStoresInner instantiates a new GameResponseOfficialStoresInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameResponseOfficialStoresInner() *GameResponseOfficialStoresInner {
	this := GameResponseOfficialStoresInner{}
	return &this
}

// NewGameResponseOfficialStoresInnerWithDefaults instantiates a new GameResponseOfficialStoresInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameResponseOfficialStoresInnerWithDefaults() *GameResponseOfficialStoresInner {
	this := GameResponseOfficialStoresInner{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *GameResponseOfficialStoresInner) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponseOfficialStoresInner) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *GameResponseOfficialStoresInner) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *GameResponseOfficialStoresInner) SetSource(v string) {
	o.Source = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GameResponseOfficialStoresInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponseOfficialStoresInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GameResponseOfficialStoresInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GameResponseOfficialStoresInner) SetUrl(v string) {
	o.Url = &v
}

func (o GameResponseOfficialStoresInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameResponseOfficialStoresInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableGameResponseOfficialStoresInner struct {
	value *GameResponseOfficialStoresInner
	isSet bool
}

func (v NullableGameResponseOfficialStoresInner) Get() *GameResponseOfficialStoresInner {
	return v.value
}

func (v *NullableGameResponseOfficialStoresInner) Set(val *GameResponseOfficialStoresInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGameResponseOfficialStoresInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGameResponseOfficialStoresInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameResponseOfficialStoresInner(val *GameResponseOfficialStoresInner) *NullableGameResponseOfficialStoresInner {
	return &NullableGameResponseOfficialStoresInner{value: val, isSet: true}
}

func (v NullableGameResponseOfficialStoresInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameResponseOfficialStoresInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


