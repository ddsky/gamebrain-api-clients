/*
GameBrain API

GameBrain API

API version: 1.0.1
Contact: mail@gamebrain.co
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamebrain

import (
	"encoding/json"
)

// checks if the SearchResponseSortingOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResponseSortingOptionsInner{}

// SearchResponseSortingOptionsInner struct for SearchResponseSortingOptionsInner
type SearchResponseSortingOptionsInner struct {
	Name *string `json:"name,omitempty"`
	Sort *string `json:"sort,omitempty"`
	Key *string `json:"key,omitempty"`
}

// NewSearchResponseSortingOptionsInner instantiates a new SearchResponseSortingOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponseSortingOptionsInner() *SearchResponseSortingOptionsInner {
	this := SearchResponseSortingOptionsInner{}
	return &this
}

// NewSearchResponseSortingOptionsInnerWithDefaults instantiates a new SearchResponseSortingOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseSortingOptionsInnerWithDefaults() *SearchResponseSortingOptionsInner {
	this := SearchResponseSortingOptionsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchResponseSortingOptionsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseSortingOptionsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchResponseSortingOptionsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchResponseSortingOptionsInner) SetName(v string) {
	o.Name = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *SearchResponseSortingOptionsInner) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseSortingOptionsInner) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *SearchResponseSortingOptionsInner) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *SearchResponseSortingOptionsInner) SetSort(v string) {
	o.Sort = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SearchResponseSortingOptionsInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseSortingOptionsInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SearchResponseSortingOptionsInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SearchResponseSortingOptionsInner) SetKey(v string) {
	o.Key = &v
}

func (o SearchResponseSortingOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponseSortingOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	return toSerialize, nil
}

type NullableSearchResponseSortingOptionsInner struct {
	value *SearchResponseSortingOptionsInner
	isSet bool
}

func (v NullableSearchResponseSortingOptionsInner) Get() *SearchResponseSortingOptionsInner {
	return v.value
}

func (v *NullableSearchResponseSortingOptionsInner) Set(val *SearchResponseSortingOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponseSortingOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponseSortingOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponseSortingOptionsInner(val *SearchResponseSortingOptionsInner) *NullableSearchResponseSortingOptionsInner {
	return &NullableSearchResponseSortingOptionsInner{value: val, isSet: true}
}

func (v NullableSearchResponseSortingOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponseSortingOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


