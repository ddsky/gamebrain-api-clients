/*
GameBrain API

GameBrain API

API version: 1.0.1
Contact: mail@gamebrain.co
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamebrain

import (
	"encoding/json"
)

// checks if the GameResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GameResponse{}

// GameResponse struct for GameResponse
type GameResponse struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Image *string `json:"image,omitempty"`
	Gameplay *string `json:"gameplay,omitempty"`
	Link *string `json:"link,omitempty"`
	XUrl *string `json:"x_url,omitempty"`
	Rating *GameResponseRating `json:"rating,omitempty"`
	Description *string `json:"description,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	ReleaseDate *string `json:"release_date,omitempty"`
	Developer *string `json:"developer,omitempty"`
	Playtime *GameResponsePlaytime `json:"playtime,omitempty"`
	Platforms []GameResponsePlatformsInner `json:"platforms,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Genres []GameResponsePlatformsInner `json:"genres,omitempty"`
	Genre *string `json:"genre,omitempty"`
	Themes []GameResponsePlatformsInner `json:"themes,omitempty"`
	AdultOnly *bool `json:"adult_only,omitempty"`
	PlayModes []GameResponsePlatformsInner `json:"play_modes,omitempty"`
	Screenshots []string `json:"screenshots,omitempty"`
	Videos []string `json:"videos,omitempty"`
	Offers []GameResponseOffersInner `json:"offers,omitempty"`
	OfficialStores []GameResponseOfficialStoresInner `json:"official_stores,omitempty"`
	MicroTrailer *string `json:"micro_trailer,omitempty"`
}

// NewGameResponse instantiates a new GameResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGameResponse() *GameResponse {
	this := GameResponse{}
	return &this
}

// NewGameResponseWithDefaults instantiates a new GameResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGameResponseWithDefaults() *GameResponse {
	this := GameResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GameResponse) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GameResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GameResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GameResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GameResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GameResponse) SetName(v string) {
	o.Name = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GameResponse) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GameResponse) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GameResponse) SetImage(v string) {
	o.Image = &v
}

// GetGameplay returns the Gameplay field value if set, zero value otherwise.
func (o *GameResponse) GetGameplay() string {
	if o == nil || IsNil(o.Gameplay) {
		var ret string
		return ret
	}
	return *o.Gameplay
}

// GetGameplayOk returns a tuple with the Gameplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetGameplayOk() (*string, bool) {
	if o == nil || IsNil(o.Gameplay) {
		return nil, false
	}
	return o.Gameplay, true
}

// HasGameplay returns a boolean if a field has been set.
func (o *GameResponse) HasGameplay() bool {
	if o != nil && !IsNil(o.Gameplay) {
		return true
	}

	return false
}

// SetGameplay gets a reference to the given string and assigns it to the Gameplay field.
func (o *GameResponse) SetGameplay(v string) {
	o.Gameplay = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *GameResponse) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *GameResponse) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *GameResponse) SetLink(v string) {
	o.Link = &v
}

// GetXUrl returns the XUrl field value if set, zero value otherwise.
func (o *GameResponse) GetXUrl() string {
	if o == nil || IsNil(o.XUrl) {
		var ret string
		return ret
	}
	return *o.XUrl
}

// GetXUrlOk returns a tuple with the XUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetXUrlOk() (*string, bool) {
	if o == nil || IsNil(o.XUrl) {
		return nil, false
	}
	return o.XUrl, true
}

// HasXUrl returns a boolean if a field has been set.
func (o *GameResponse) HasXUrl() bool {
	if o != nil && !IsNil(o.XUrl) {
		return true
	}

	return false
}

// SetXUrl gets a reference to the given string and assigns it to the XUrl field.
func (o *GameResponse) SetXUrl(v string) {
	o.XUrl = &v
}

// GetRating returns the Rating field value if set, zero value otherwise.
func (o *GameResponse) GetRating() GameResponseRating {
	if o == nil || IsNil(o.Rating) {
		var ret GameResponseRating
		return ret
	}
	return *o.Rating
}

// GetRatingOk returns a tuple with the Rating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetRatingOk() (*GameResponseRating, bool) {
	if o == nil || IsNil(o.Rating) {
		return nil, false
	}
	return o.Rating, true
}

// HasRating returns a boolean if a field has been set.
func (o *GameResponse) HasRating() bool {
	if o != nil && !IsNil(o.Rating) {
		return true
	}

	return false
}

// SetRating gets a reference to the given GameResponseRating and assigns it to the Rating field.
func (o *GameResponse) SetRating(v GameResponseRating) {
	o.Rating = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GameResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GameResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GameResponse) SetDescription(v string) {
	o.Description = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *GameResponse) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *GameResponse) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *GameResponse) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetReleaseDate returns the ReleaseDate field value if set, zero value otherwise.
func (o *GameResponse) GetReleaseDate() string {
	if o == nil || IsNil(o.ReleaseDate) {
		var ret string
		return ret
	}
	return *o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetReleaseDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseDate) {
		return nil, false
	}
	return o.ReleaseDate, true
}

// HasReleaseDate returns a boolean if a field has been set.
func (o *GameResponse) HasReleaseDate() bool {
	if o != nil && !IsNil(o.ReleaseDate) {
		return true
	}

	return false
}

// SetReleaseDate gets a reference to the given string and assigns it to the ReleaseDate field.
func (o *GameResponse) SetReleaseDate(v string) {
	o.ReleaseDate = &v
}

// GetDeveloper returns the Developer field value if set, zero value otherwise.
func (o *GameResponse) GetDeveloper() string {
	if o == nil || IsNil(o.Developer) {
		var ret string
		return ret
	}
	return *o.Developer
}

// GetDeveloperOk returns a tuple with the Developer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetDeveloperOk() (*string, bool) {
	if o == nil || IsNil(o.Developer) {
		return nil, false
	}
	return o.Developer, true
}

// HasDeveloper returns a boolean if a field has been set.
func (o *GameResponse) HasDeveloper() bool {
	if o != nil && !IsNil(o.Developer) {
		return true
	}

	return false
}

// SetDeveloper gets a reference to the given string and assigns it to the Developer field.
func (o *GameResponse) SetDeveloper(v string) {
	o.Developer = &v
}

// GetPlaytime returns the Playtime field value if set, zero value otherwise.
func (o *GameResponse) GetPlaytime() GameResponsePlaytime {
	if o == nil || IsNil(o.Playtime) {
		var ret GameResponsePlaytime
		return ret
	}
	return *o.Playtime
}

// GetPlaytimeOk returns a tuple with the Playtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetPlaytimeOk() (*GameResponsePlaytime, bool) {
	if o == nil || IsNil(o.Playtime) {
		return nil, false
	}
	return o.Playtime, true
}

// HasPlaytime returns a boolean if a field has been set.
func (o *GameResponse) HasPlaytime() bool {
	if o != nil && !IsNil(o.Playtime) {
		return true
	}

	return false
}

// SetPlaytime gets a reference to the given GameResponsePlaytime and assigns it to the Playtime field.
func (o *GameResponse) SetPlaytime(v GameResponsePlaytime) {
	o.Playtime = &v
}

// GetPlatforms returns the Platforms field value if set, zero value otherwise.
func (o *GameResponse) GetPlatforms() []GameResponsePlatformsInner {
	if o == nil || IsNil(o.Platforms) {
		var ret []GameResponsePlatformsInner
		return ret
	}
	return o.Platforms
}

// GetPlatformsOk returns a tuple with the Platforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetPlatformsOk() ([]GameResponsePlatformsInner, bool) {
	if o == nil || IsNil(o.Platforms) {
		return nil, false
	}
	return o.Platforms, true
}

// HasPlatforms returns a boolean if a field has been set.
func (o *GameResponse) HasPlatforms() bool {
	if o != nil && !IsNil(o.Platforms) {
		return true
	}

	return false
}

// SetPlatforms gets a reference to the given []GameResponsePlatformsInner and assigns it to the Platforms field.
func (o *GameResponse) SetPlatforms(v []GameResponsePlatformsInner) {
	o.Platforms = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *GameResponse) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GameResponse) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GameResponse) SetTags(v []string) {
	o.Tags = v
}

// GetGenres returns the Genres field value if set, zero value otherwise.
func (o *GameResponse) GetGenres() []GameResponsePlatformsInner {
	if o == nil || IsNil(o.Genres) {
		var ret []GameResponsePlatformsInner
		return ret
	}
	return o.Genres
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetGenresOk() ([]GameResponsePlatformsInner, bool) {
	if o == nil || IsNil(o.Genres) {
		return nil, false
	}
	return o.Genres, true
}

// HasGenres returns a boolean if a field has been set.
func (o *GameResponse) HasGenres() bool {
	if o != nil && !IsNil(o.Genres) {
		return true
	}

	return false
}

// SetGenres gets a reference to the given []GameResponsePlatformsInner and assigns it to the Genres field.
func (o *GameResponse) SetGenres(v []GameResponsePlatformsInner) {
	o.Genres = v
}

// GetGenre returns the Genre field value if set, zero value otherwise.
func (o *GameResponse) GetGenre() string {
	if o == nil || IsNil(o.Genre) {
		var ret string
		return ret
	}
	return *o.Genre
}

// GetGenreOk returns a tuple with the Genre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetGenreOk() (*string, bool) {
	if o == nil || IsNil(o.Genre) {
		return nil, false
	}
	return o.Genre, true
}

// HasGenre returns a boolean if a field has been set.
func (o *GameResponse) HasGenre() bool {
	if o != nil && !IsNil(o.Genre) {
		return true
	}

	return false
}

// SetGenre gets a reference to the given string and assigns it to the Genre field.
func (o *GameResponse) SetGenre(v string) {
	o.Genre = &v
}

// GetThemes returns the Themes field value if set, zero value otherwise.
func (o *GameResponse) GetThemes() []GameResponsePlatformsInner {
	if o == nil || IsNil(o.Themes) {
		var ret []GameResponsePlatformsInner
		return ret
	}
	return o.Themes
}

// GetThemesOk returns a tuple with the Themes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetThemesOk() ([]GameResponsePlatformsInner, bool) {
	if o == nil || IsNil(o.Themes) {
		return nil, false
	}
	return o.Themes, true
}

// HasThemes returns a boolean if a field has been set.
func (o *GameResponse) HasThemes() bool {
	if o != nil && !IsNil(o.Themes) {
		return true
	}

	return false
}

// SetThemes gets a reference to the given []GameResponsePlatformsInner and assigns it to the Themes field.
func (o *GameResponse) SetThemes(v []GameResponsePlatformsInner) {
	o.Themes = v
}

// GetAdultOnly returns the AdultOnly field value if set, zero value otherwise.
func (o *GameResponse) GetAdultOnly() bool {
	if o == nil || IsNil(o.AdultOnly) {
		var ret bool
		return ret
	}
	return *o.AdultOnly
}

// GetAdultOnlyOk returns a tuple with the AdultOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetAdultOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.AdultOnly) {
		return nil, false
	}
	return o.AdultOnly, true
}

// HasAdultOnly returns a boolean if a field has been set.
func (o *GameResponse) HasAdultOnly() bool {
	if o != nil && !IsNil(o.AdultOnly) {
		return true
	}

	return false
}

// SetAdultOnly gets a reference to the given bool and assigns it to the AdultOnly field.
func (o *GameResponse) SetAdultOnly(v bool) {
	o.AdultOnly = &v
}

// GetPlayModes returns the PlayModes field value if set, zero value otherwise.
func (o *GameResponse) GetPlayModes() []GameResponsePlatformsInner {
	if o == nil || IsNil(o.PlayModes) {
		var ret []GameResponsePlatformsInner
		return ret
	}
	return o.PlayModes
}

// GetPlayModesOk returns a tuple with the PlayModes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetPlayModesOk() ([]GameResponsePlatformsInner, bool) {
	if o == nil || IsNil(o.PlayModes) {
		return nil, false
	}
	return o.PlayModes, true
}

// HasPlayModes returns a boolean if a field has been set.
func (o *GameResponse) HasPlayModes() bool {
	if o != nil && !IsNil(o.PlayModes) {
		return true
	}

	return false
}

// SetPlayModes gets a reference to the given []GameResponsePlatformsInner and assigns it to the PlayModes field.
func (o *GameResponse) SetPlayModes(v []GameResponsePlatformsInner) {
	o.PlayModes = v
}

// GetScreenshots returns the Screenshots field value if set, zero value otherwise.
func (o *GameResponse) GetScreenshots() []string {
	if o == nil || IsNil(o.Screenshots) {
		var ret []string
		return ret
	}
	return o.Screenshots
}

// GetScreenshotsOk returns a tuple with the Screenshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetScreenshotsOk() ([]string, bool) {
	if o == nil || IsNil(o.Screenshots) {
		return nil, false
	}
	return o.Screenshots, true
}

// HasScreenshots returns a boolean if a field has been set.
func (o *GameResponse) HasScreenshots() bool {
	if o != nil && !IsNil(o.Screenshots) {
		return true
	}

	return false
}

// SetScreenshots gets a reference to the given []string and assigns it to the Screenshots field.
func (o *GameResponse) SetScreenshots(v []string) {
	o.Screenshots = v
}

// GetVideos returns the Videos field value if set, zero value otherwise.
func (o *GameResponse) GetVideos() []string {
	if o == nil || IsNil(o.Videos) {
		var ret []string
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetVideosOk() ([]string, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *GameResponse) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []string and assigns it to the Videos field.
func (o *GameResponse) SetVideos(v []string) {
	o.Videos = v
}

// GetOffers returns the Offers field value if set, zero value otherwise.
func (o *GameResponse) GetOffers() []GameResponseOffersInner {
	if o == nil || IsNil(o.Offers) {
		var ret []GameResponseOffersInner
		return ret
	}
	return o.Offers
}

// GetOffersOk returns a tuple with the Offers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetOffersOk() ([]GameResponseOffersInner, bool) {
	if o == nil || IsNil(o.Offers) {
		return nil, false
	}
	return o.Offers, true
}

// HasOffers returns a boolean if a field has been set.
func (o *GameResponse) HasOffers() bool {
	if o != nil && !IsNil(o.Offers) {
		return true
	}

	return false
}

// SetOffers gets a reference to the given []GameResponseOffersInner and assigns it to the Offers field.
func (o *GameResponse) SetOffers(v []GameResponseOffersInner) {
	o.Offers = v
}

// GetOfficialStores returns the OfficialStores field value if set, zero value otherwise.
func (o *GameResponse) GetOfficialStores() []GameResponseOfficialStoresInner {
	if o == nil || IsNil(o.OfficialStores) {
		var ret []GameResponseOfficialStoresInner
		return ret
	}
	return o.OfficialStores
}

// GetOfficialStoresOk returns a tuple with the OfficialStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetOfficialStoresOk() ([]GameResponseOfficialStoresInner, bool) {
	if o == nil || IsNil(o.OfficialStores) {
		return nil, false
	}
	return o.OfficialStores, true
}

// HasOfficialStores returns a boolean if a field has been set.
func (o *GameResponse) HasOfficialStores() bool {
	if o != nil && !IsNil(o.OfficialStores) {
		return true
	}

	return false
}

// SetOfficialStores gets a reference to the given []GameResponseOfficialStoresInner and assigns it to the OfficialStores field.
func (o *GameResponse) SetOfficialStores(v []GameResponseOfficialStoresInner) {
	o.OfficialStores = v
}

// GetMicroTrailer returns the MicroTrailer field value if set, zero value otherwise.
func (o *GameResponse) GetMicroTrailer() string {
	if o == nil || IsNil(o.MicroTrailer) {
		var ret string
		return ret
	}
	return *o.MicroTrailer
}

// GetMicroTrailerOk returns a tuple with the MicroTrailer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GameResponse) GetMicroTrailerOk() (*string, bool) {
	if o == nil || IsNil(o.MicroTrailer) {
		return nil, false
	}
	return o.MicroTrailer, true
}

// HasMicroTrailer returns a boolean if a field has been set.
func (o *GameResponse) HasMicroTrailer() bool {
	if o != nil && !IsNil(o.MicroTrailer) {
		return true
	}

	return false
}

// SetMicroTrailer gets a reference to the given string and assigns it to the MicroTrailer field.
func (o *GameResponse) SetMicroTrailer(v string) {
	o.MicroTrailer = &v
}

func (o GameResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GameResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Gameplay) {
		toSerialize["gameplay"] = o.Gameplay
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.XUrl) {
		toSerialize["x_url"] = o.XUrl
	}
	if !IsNil(o.Rating) {
		toSerialize["rating"] = o.Rating
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	if !IsNil(o.ReleaseDate) {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if !IsNil(o.Developer) {
		toSerialize["developer"] = o.Developer
	}
	if !IsNil(o.Playtime) {
		toSerialize["playtime"] = o.Playtime
	}
	if !IsNil(o.Platforms) {
		toSerialize["platforms"] = o.Platforms
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Genres) {
		toSerialize["genres"] = o.Genres
	}
	if !IsNil(o.Genre) {
		toSerialize["genre"] = o.Genre
	}
	if !IsNil(o.Themes) {
		toSerialize["themes"] = o.Themes
	}
	if !IsNil(o.AdultOnly) {
		toSerialize["adult_only"] = o.AdultOnly
	}
	if !IsNil(o.PlayModes) {
		toSerialize["play_modes"] = o.PlayModes
	}
	if !IsNil(o.Screenshots) {
		toSerialize["screenshots"] = o.Screenshots
	}
	if !IsNil(o.Videos) {
		toSerialize["videos"] = o.Videos
	}
	if !IsNil(o.Offers) {
		toSerialize["offers"] = o.Offers
	}
	if !IsNil(o.OfficialStores) {
		toSerialize["official_stores"] = o.OfficialStores
	}
	if !IsNil(o.MicroTrailer) {
		toSerialize["micro_trailer"] = o.MicroTrailer
	}
	return toSerialize, nil
}

type NullableGameResponse struct {
	value *GameResponse
	isSet bool
}

func (v NullableGameResponse) Get() *GameResponse {
	return v.value
}

func (v *NullableGameResponse) Set(val *GameResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGameResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGameResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGameResponse(val *GameResponse) *NullableGameResponse {
	return &NullableGameResponse{value: val, isSet: true}
}

func (v NullableGameResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGameResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


