/*
GameBrain API

GameBrain API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gamebrain

import (
	"encoding/json"
)

// checks if the SearchResponseActiveFilterOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResponseActiveFilterOptionsInner{}

// SearchResponseActiveFilterOptionsInner struct for SearchResponseActiveFilterOptionsInner
type SearchResponseActiveFilterOptionsInner struct {
	Key *string `json:"key,omitempty"`
	Connection *string `json:"connection,omitempty"`
	Values []SearchResponseActiveFilterOptionsInnerValuesInner `json:"values,omitempty"`
}

// NewSearchResponseActiveFilterOptionsInner instantiates a new SearchResponseActiveFilterOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponseActiveFilterOptionsInner() *SearchResponseActiveFilterOptionsInner {
	this := SearchResponseActiveFilterOptionsInner{}
	return &this
}

// NewSearchResponseActiveFilterOptionsInnerWithDefaults instantiates a new SearchResponseActiveFilterOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponseActiveFilterOptionsInnerWithDefaults() *SearchResponseActiveFilterOptionsInner {
	this := SearchResponseActiveFilterOptionsInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SearchResponseActiveFilterOptionsInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseActiveFilterOptionsInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SearchResponseActiveFilterOptionsInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SearchResponseActiveFilterOptionsInner) SetKey(v string) {
	o.Key = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *SearchResponseActiveFilterOptionsInner) GetConnection() string {
	if o == nil || IsNil(o.Connection) {
		var ret string
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseActiveFilterOptionsInner) GetConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *SearchResponseActiveFilterOptionsInner) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given string and assigns it to the Connection field.
func (o *SearchResponseActiveFilterOptionsInner) SetConnection(v string) {
	o.Connection = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *SearchResponseActiveFilterOptionsInner) GetValues() []SearchResponseActiveFilterOptionsInnerValuesInner {
	if o == nil || IsNil(o.Values) {
		var ret []SearchResponseActiveFilterOptionsInnerValuesInner
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResponseActiveFilterOptionsInner) GetValuesOk() ([]SearchResponseActiveFilterOptionsInnerValuesInner, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *SearchResponseActiveFilterOptionsInner) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []SearchResponseActiveFilterOptionsInnerValuesInner and assigns it to the Values field.
func (o *SearchResponseActiveFilterOptionsInner) SetValues(v []SearchResponseActiveFilterOptionsInnerValuesInner) {
	o.Values = v
}

func (o SearchResponseActiveFilterOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponseActiveFilterOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableSearchResponseActiveFilterOptionsInner struct {
	value *SearchResponseActiveFilterOptionsInner
	isSet bool
}

func (v NullableSearchResponseActiveFilterOptionsInner) Get() *SearchResponseActiveFilterOptionsInner {
	return v.value
}

func (v *NullableSearchResponseActiveFilterOptionsInner) Set(val *SearchResponseActiveFilterOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponseActiveFilterOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponseActiveFilterOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponseActiveFilterOptionsInner(val *SearchResponseActiveFilterOptionsInner) *NullableSearchResponseActiveFilterOptionsInner {
	return &NullableSearchResponseActiveFilterOptionsInner{value: val, isSet: true}
}

func (v NullableSearchResponseActiveFilterOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponseActiveFilterOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


