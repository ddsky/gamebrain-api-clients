{-
   GameBrain API
   GameBrain API

   The version of the OpenAPI document: 1.0.0

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git

   DO NOT EDIT THIS FILE MANUALLY.

   For more info on generating Elm code, see https://eriktim.github.io/openapi-elm/
-}


module Api.Data exposing
    ( GameResponse
    , GameResponseOffersInner
    , GameResponseOffersInnerPrice
    , GameResponseOfficialStoresInner
    , GameResponsePlatformsInner
    , GameResponsePlaytime
    , GameResponseRating
    , SearchResponse
    , SearchResponseActiveFilterOptionsInner
    , SearchResponseActiveFilterOptionsInnerValuesInner
    , SearchResponseFilterOptionsInner
    , SearchResponseFilterOptionsInnerValuesInner
    , SearchResponseResultsInner
    , SearchResponseResultsInnerRating
    , SearchResponseSorting
    , SearchResponseSortingOptionsInner
    , SearchSuggestionResponse
    , SearchSuggestionResponseResultsInner
    , SimilarGamesResponse
    , encodeGameResponse
    , encodeGameResponseOffersInner
    , encodeGameResponseOffersInnerPrice
    , encodeGameResponseOfficialStoresInner
    , encodeGameResponsePlatformsInner
    , encodeGameResponsePlaytime
    , encodeGameResponseRating
    , encodeSearchResponse
    , encodeSearchResponseActiveFilterOptionsInner
    , encodeSearchResponseActiveFilterOptionsInnerValuesInner
    , encodeSearchResponseFilterOptionsInner
    , encodeSearchResponseFilterOptionsInnerValuesInner
    , encodeSearchResponseResultsInner
    , encodeSearchResponseResultsInnerRating
    , encodeSearchResponseSorting
    , encodeSearchResponseSortingOptionsInner
    , encodeSearchSuggestionResponse
    , encodeSearchSuggestionResponseResultsInner
    , encodeSimilarGamesResponse
    , gameResponseDecoder
    , gameResponseOffersInnerDecoder
    , gameResponseOffersInnerPriceDecoder
    , gameResponseOfficialStoresInnerDecoder
    , gameResponsePlatformsInnerDecoder
    , gameResponsePlaytimeDecoder
    , gameResponseRatingDecoder
    , searchResponseDecoder
    , searchResponseActiveFilterOptionsInnerDecoder
    , searchResponseActiveFilterOptionsInnerValuesInnerDecoder
    , searchResponseFilterOptionsInnerDecoder
    , searchResponseFilterOptionsInnerValuesInnerDecoder
    , searchResponseResultsInnerDecoder
    , searchResponseResultsInnerRatingDecoder
    , searchResponseSortingDecoder
    , searchResponseSortingOptionsInnerDecoder
    , searchSuggestionResponseDecoder
    , searchSuggestionResponseResultsInnerDecoder
    , similarGamesResponseDecoder
    )

import Api
import Api.Time exposing (Posix)
import Dict
import Json.Decode
import Json.Encode


-- MODEL


type alias GameResponse =
    { id : Maybe Int
    , name : Maybe String
    , image : Maybe String
    , gameplay : Maybe String
    , link : Maybe String
    , xUrl : Maybe String
    , rating : Maybe GameResponseRating
    , description : Maybe String
    , shortDescription : Maybe String
    , releaseDate : Maybe Posix
    , developer : Maybe String
    , playtime : Maybe GameResponsePlaytime
    , platforms : Maybe ( List GameResponsePlatformsInner )
    , tags : Maybe ( List String )
    , genres : Maybe ( List GameResponsePlatformsInner )
    , genre : Maybe String
    , themes : Maybe ( List GameResponsePlatformsInner )
    , adultOnly : Maybe Bool
    , playModes : Maybe ( List GameResponsePlatformsInner )
    , screenshots : Maybe ( List String )
    , videos : Maybe ( List String )
    , offers : Maybe ( List GameResponseOffersInner )
    , officialStores : Maybe ( List GameResponseOfficialStoresInner )
    , microTrailer : Maybe String
    }


type alias GameResponseOffersInner =
    { price : Maybe GameResponseOffersInnerPrice
    , storeName : Maybe String
    , platform : Maybe String
    , title : Maybe String
    , url : Maybe String
    }


type alias GameResponseOffersInnerPrice =
    { currency : Maybe String
    , discountPercent : Maybe Float
    , value : Maybe Float
    , initial : Maybe Float
    }


type alias GameResponseOfficialStoresInner =
    { source : Maybe String
    , url : Maybe String
    }


type alias GameResponsePlatformsInner =
    { value : Maybe String
    , name : Maybe String
    }


type alias GameResponsePlaytime =
    { percentiles : Maybe ( List Int )
    , min : Maybe Int
    , median : Maybe Int
    , max : Maybe Int
    , mean : Maybe Float
    , mentions : Maybe Int
    }


type alias GameResponseRating =
    { mean : Maybe Float
    , count : Maybe Int
    , meanPlayers : Maybe Float
    , countPlayers : Maybe Int
    , meanCritics : Maybe Float
    , countCritics : Maybe Int
    }


type alias SearchResponse =
    { sorting : Maybe SearchResponseSorting
    , activeFilterOptions : Maybe ( List SearchResponseActiveFilterOptionsInner )
    , query : Maybe String
    , totalResults : Maybe Int
    , limit : Maybe Int
    , offset : Maybe Int
    , results : Maybe ( List SearchResponseResultsInner )
    , filterOptions : Maybe ( List SearchResponseFilterOptionsInner )
    , sortingOptions : Maybe ( List SearchResponseSortingOptionsInner )
    }


type alias SearchResponseActiveFilterOptionsInner =
    { key : Maybe String
    , connection : Maybe String
    , values : Maybe ( List SearchResponseActiveFilterOptionsInnerValuesInner )
    }


type alias SearchResponseActiveFilterOptionsInnerValuesInner =
    { match : Maybe String
    , value : Maybe String
    }


type alias SearchResponseFilterOptionsInner =
    { name : Maybe String
    , key : Maybe String
    , values : Maybe ( List SearchResponseFilterOptionsInnerValuesInner )
    }


type alias SearchResponseFilterOptionsInnerValuesInner =
    { name : Maybe String
    , key : Maybe String
    , count : Maybe Float
    }


type alias SearchResponseResultsInner =
    { id : Maybe Int
    , year : Maybe Float
    , name : Maybe String
    , genre : Maybe String
    , image : Maybe String
    , link : Maybe String
    , rating : Maybe SearchResponseResultsInnerRating
    , adultOnly : Maybe Bool
    , screenshots : Maybe ( List String )
    , microTrailer : Maybe String
    , gameplay : Maybe String
    , shortDescription : Maybe String
    }


type alias SearchResponseResultsInnerRating =
    { mean : Maybe Float
    , count : Maybe Float
    }


type alias SearchResponseSorting =
    { key : Maybe String
    , direction : Maybe String
    }


type alias SearchResponseSortingOptionsInner =
    { name : Maybe String
    , sort : Maybe String
    , key : Maybe String
    }


type alias SearchSuggestionResponse =
    { results : Maybe ( List SearchSuggestionResponseResultsInner )
    }


type alias SearchSuggestionResponseResultsInner =
    { id : Maybe Int
    , year : Maybe Float
    , name : Maybe String
    , genre : Maybe String
    , image : Maybe String
    , link : Maybe String
    , rating : Maybe SearchResponseResultsInnerRating
    , adultOnly : Maybe Bool
    }


type alias SimilarGamesResponse =
    { results : Maybe ( List SearchResponseResultsInner )
    }


-- ENCODER


encodeGameResponse : GameResponse -> Json.Encode.Value
encodeGameResponse =
    encodeObject << encodeGameResponsePairs


encodeGameResponseWithTag : ( String, String ) -> GameResponse -> Json.Encode.Value
encodeGameResponseWithTag (tagField, tag) model =
    encodeObject (encodeGameResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponsePairs : GameResponse -> List EncodedField
encodeGameResponsePairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "image" Json.Encode.string model.image
            , maybeEncode "gameplay" Json.Encode.string model.gameplay
            , maybeEncode "link" Json.Encode.string model.link
            , maybeEncode "x_url" Json.Encode.string model.xUrl
            , maybeEncode "rating" encodeGameResponseRating model.rating
            , maybeEncode "description" Json.Encode.string model.description
            , maybeEncode "short_description" Json.Encode.string model.shortDescription
            , maybeEncode "release_date" Api.Time.encodeDate model.releaseDate
            , maybeEncode "developer" Json.Encode.string model.developer
            , maybeEncode "playtime" encodeGameResponsePlaytime model.playtime
            , maybeEncode "platforms" (Json.Encode.list encodeGameResponsePlatformsInner) model.platforms
            , maybeEncode "tags" (Json.Encode.list Json.Encode.string) model.tags
            , maybeEncode "genres" (Json.Encode.list encodeGameResponsePlatformsInner) model.genres
            , maybeEncode "genre" Json.Encode.string model.genre
            , maybeEncode "themes" (Json.Encode.list encodeGameResponsePlatformsInner) model.themes
            , maybeEncode "adult_only" Json.Encode.bool model.adultOnly
            , maybeEncode "play_modes" (Json.Encode.list encodeGameResponsePlatformsInner) model.playModes
            , maybeEncode "screenshots" (Json.Encode.list Json.Encode.string) model.screenshots
            , maybeEncode "videos" (Json.Encode.list Json.Encode.string) model.videos
            , maybeEncode "offers" (Json.Encode.list encodeGameResponseOffersInner) model.offers
            , maybeEncode "official_stores" (Json.Encode.list encodeGameResponseOfficialStoresInner) model.officialStores
            , maybeEncode "micro_trailer" Json.Encode.string model.microTrailer
            ]
    in
    pairs


encodeGameResponseOffersInner : GameResponseOffersInner -> Json.Encode.Value
encodeGameResponseOffersInner =
    encodeObject << encodeGameResponseOffersInnerPairs


encodeGameResponseOffersInnerWithTag : ( String, String ) -> GameResponseOffersInner -> Json.Encode.Value
encodeGameResponseOffersInnerWithTag (tagField, tag) model =
    encodeObject (encodeGameResponseOffersInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponseOffersInnerPairs : GameResponseOffersInner -> List EncodedField
encodeGameResponseOffersInnerPairs model =
    let
        pairs =
            [ maybeEncode "price" encodeGameResponseOffersInnerPrice model.price
            , maybeEncode "store_name" Json.Encode.string model.storeName
            , maybeEncode "platform" Json.Encode.string model.platform
            , maybeEncode "title" Json.Encode.string model.title
            , maybeEncode "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeGameResponseOffersInnerPrice : GameResponseOffersInnerPrice -> Json.Encode.Value
encodeGameResponseOffersInnerPrice =
    encodeObject << encodeGameResponseOffersInnerPricePairs


encodeGameResponseOffersInnerPriceWithTag : ( String, String ) -> GameResponseOffersInnerPrice -> Json.Encode.Value
encodeGameResponseOffersInnerPriceWithTag (tagField, tag) model =
    encodeObject (encodeGameResponseOffersInnerPricePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponseOffersInnerPricePairs : GameResponseOffersInnerPrice -> List EncodedField
encodeGameResponseOffersInnerPricePairs model =
    let
        pairs =
            [ maybeEncode "currency" Json.Encode.string model.currency
            , maybeEncode "discount_percent" Json.Encode.float model.discountPercent
            , maybeEncode "value" Json.Encode.float model.value
            , maybeEncode "initial" Json.Encode.float model.initial
            ]
    in
    pairs


encodeGameResponseOfficialStoresInner : GameResponseOfficialStoresInner -> Json.Encode.Value
encodeGameResponseOfficialStoresInner =
    encodeObject << encodeGameResponseOfficialStoresInnerPairs


encodeGameResponseOfficialStoresInnerWithTag : ( String, String ) -> GameResponseOfficialStoresInner -> Json.Encode.Value
encodeGameResponseOfficialStoresInnerWithTag (tagField, tag) model =
    encodeObject (encodeGameResponseOfficialStoresInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponseOfficialStoresInnerPairs : GameResponseOfficialStoresInner -> List EncodedField
encodeGameResponseOfficialStoresInnerPairs model =
    let
        pairs =
            [ maybeEncode "source" Json.Encode.string model.source
            , maybeEncode "url" Json.Encode.string model.url
            ]
    in
    pairs


encodeGameResponsePlatformsInner : GameResponsePlatformsInner -> Json.Encode.Value
encodeGameResponsePlatformsInner =
    encodeObject << encodeGameResponsePlatformsInnerPairs


encodeGameResponsePlatformsInnerWithTag : ( String, String ) -> GameResponsePlatformsInner -> Json.Encode.Value
encodeGameResponsePlatformsInnerWithTag (tagField, tag) model =
    encodeObject (encodeGameResponsePlatformsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponsePlatformsInnerPairs : GameResponsePlatformsInner -> List EncodedField
encodeGameResponsePlatformsInnerPairs model =
    let
        pairs =
            [ maybeEncode "value" Json.Encode.string model.value
            , maybeEncode "name" Json.Encode.string model.name
            ]
    in
    pairs


encodeGameResponsePlaytime : GameResponsePlaytime -> Json.Encode.Value
encodeGameResponsePlaytime =
    encodeObject << encodeGameResponsePlaytimePairs


encodeGameResponsePlaytimeWithTag : ( String, String ) -> GameResponsePlaytime -> Json.Encode.Value
encodeGameResponsePlaytimeWithTag (tagField, tag) model =
    encodeObject (encodeGameResponsePlaytimePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponsePlaytimePairs : GameResponsePlaytime -> List EncodedField
encodeGameResponsePlaytimePairs model =
    let
        pairs =
            [ maybeEncode "percentiles" (Json.Encode.list Json.Encode.int) model.percentiles
            , maybeEncode "min" Json.Encode.int model.min
            , maybeEncode "median" Json.Encode.int model.median
            , maybeEncode "max" Json.Encode.int model.max
            , maybeEncode "mean" Json.Encode.float model.mean
            , maybeEncode "mentions" Json.Encode.int model.mentions
            ]
    in
    pairs


encodeGameResponseRating : GameResponseRating -> Json.Encode.Value
encodeGameResponseRating =
    encodeObject << encodeGameResponseRatingPairs


encodeGameResponseRatingWithTag : ( String, String ) -> GameResponseRating -> Json.Encode.Value
encodeGameResponseRatingWithTag (tagField, tag) model =
    encodeObject (encodeGameResponseRatingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeGameResponseRatingPairs : GameResponseRating -> List EncodedField
encodeGameResponseRatingPairs model =
    let
        pairs =
            [ maybeEncodeNullable "mean" Json.Encode.float model.mean
            , maybeEncode "count" Json.Encode.int model.count
            , maybeEncodeNullable "mean_players" Json.Encode.float model.meanPlayers
            , maybeEncode "count_players" Json.Encode.int model.countPlayers
            , maybeEncodeNullable "mean_critics" Json.Encode.float model.meanCritics
            , maybeEncode "count_critics" Json.Encode.int model.countCritics
            ]
    in
    pairs


encodeSearchResponse : SearchResponse -> Json.Encode.Value
encodeSearchResponse =
    encodeObject << encodeSearchResponsePairs


encodeSearchResponseWithTag : ( String, String ) -> SearchResponse -> Json.Encode.Value
encodeSearchResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponsePairs : SearchResponse -> List EncodedField
encodeSearchResponsePairs model =
    let
        pairs =
            [ maybeEncode "sorting" encodeSearchResponseSorting model.sorting
            , maybeEncode "active_filter_options" (Json.Encode.list encodeSearchResponseActiveFilterOptionsInner) model.activeFilterOptions
            , maybeEncode "query" Json.Encode.string model.query
            , maybeEncode "total_results" Json.Encode.int model.totalResults
            , maybeEncode "limit" Json.Encode.int model.limit
            , maybeEncode "offset" Json.Encode.int model.offset
            , maybeEncode "results" (Json.Encode.list encodeSearchResponseResultsInner) model.results
            , maybeEncode "filter_options" (Json.Encode.list encodeSearchResponseFilterOptionsInner) model.filterOptions
            , maybeEncode "sorting_options" (Json.Encode.list encodeSearchResponseSortingOptionsInner) model.sortingOptions
            ]
    in
    pairs


encodeSearchResponseActiveFilterOptionsInner : SearchResponseActiveFilterOptionsInner -> Json.Encode.Value
encodeSearchResponseActiveFilterOptionsInner =
    encodeObject << encodeSearchResponseActiveFilterOptionsInnerPairs


encodeSearchResponseActiveFilterOptionsInnerWithTag : ( String, String ) -> SearchResponseActiveFilterOptionsInner -> Json.Encode.Value
encodeSearchResponseActiveFilterOptionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseActiveFilterOptionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseActiveFilterOptionsInnerPairs : SearchResponseActiveFilterOptionsInner -> List EncodedField
encodeSearchResponseActiveFilterOptionsInnerPairs model =
    let
        pairs =
            [ maybeEncode "key" Json.Encode.string model.key
            , maybeEncode "connection" Json.Encode.string model.connection
            , maybeEncode "values" (Json.Encode.list encodeSearchResponseActiveFilterOptionsInnerValuesInner) model.values
            ]
    in
    pairs


encodeSearchResponseActiveFilterOptionsInnerValuesInner : SearchResponseActiveFilterOptionsInnerValuesInner -> Json.Encode.Value
encodeSearchResponseActiveFilterOptionsInnerValuesInner =
    encodeObject << encodeSearchResponseActiveFilterOptionsInnerValuesInnerPairs


encodeSearchResponseActiveFilterOptionsInnerValuesInnerWithTag : ( String, String ) -> SearchResponseActiveFilterOptionsInnerValuesInner -> Json.Encode.Value
encodeSearchResponseActiveFilterOptionsInnerValuesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseActiveFilterOptionsInnerValuesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseActiveFilterOptionsInnerValuesInnerPairs : SearchResponseActiveFilterOptionsInnerValuesInner -> List EncodedField
encodeSearchResponseActiveFilterOptionsInnerValuesInnerPairs model =
    let
        pairs =
            [ maybeEncode "match" Json.Encode.string model.match
            , maybeEncode "value" Json.Encode.string model.value
            ]
    in
    pairs


encodeSearchResponseFilterOptionsInner : SearchResponseFilterOptionsInner -> Json.Encode.Value
encodeSearchResponseFilterOptionsInner =
    encodeObject << encodeSearchResponseFilterOptionsInnerPairs


encodeSearchResponseFilterOptionsInnerWithTag : ( String, String ) -> SearchResponseFilterOptionsInner -> Json.Encode.Value
encodeSearchResponseFilterOptionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseFilterOptionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseFilterOptionsInnerPairs : SearchResponseFilterOptionsInner -> List EncodedField
encodeSearchResponseFilterOptionsInnerPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "key" Json.Encode.string model.key
            , maybeEncode "values" (Json.Encode.list encodeSearchResponseFilterOptionsInnerValuesInner) model.values
            ]
    in
    pairs


encodeSearchResponseFilterOptionsInnerValuesInner : SearchResponseFilterOptionsInnerValuesInner -> Json.Encode.Value
encodeSearchResponseFilterOptionsInnerValuesInner =
    encodeObject << encodeSearchResponseFilterOptionsInnerValuesInnerPairs


encodeSearchResponseFilterOptionsInnerValuesInnerWithTag : ( String, String ) -> SearchResponseFilterOptionsInnerValuesInner -> Json.Encode.Value
encodeSearchResponseFilterOptionsInnerValuesInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseFilterOptionsInnerValuesInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseFilterOptionsInnerValuesInnerPairs : SearchResponseFilterOptionsInnerValuesInner -> List EncodedField
encodeSearchResponseFilterOptionsInnerValuesInnerPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "key" Json.Encode.string model.key
            , maybeEncode "count" Json.Encode.float model.count
            ]
    in
    pairs


encodeSearchResponseResultsInner : SearchResponseResultsInner -> Json.Encode.Value
encodeSearchResponseResultsInner =
    encodeObject << encodeSearchResponseResultsInnerPairs


encodeSearchResponseResultsInnerWithTag : ( String, String ) -> SearchResponseResultsInner -> Json.Encode.Value
encodeSearchResponseResultsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseResultsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseResultsInnerPairs : SearchResponseResultsInner -> List EncodedField
encodeSearchResponseResultsInnerPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "year" Json.Encode.float model.year
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "genre" Json.Encode.string model.genre
            , maybeEncode "image" Json.Encode.string model.image
            , maybeEncode "link" Json.Encode.string model.link
            , maybeEncode "rating" encodeSearchResponseResultsInnerRating model.rating
            , maybeEncode "adult_only" Json.Encode.bool model.adultOnly
            , maybeEncode "screenshots" (Json.Encode.list Json.Encode.string) model.screenshots
            , maybeEncode "micro_trailer" Json.Encode.string model.microTrailer
            , maybeEncode "gameplay" Json.Encode.string model.gameplay
            , maybeEncode "short_description" Json.Encode.string model.shortDescription
            ]
    in
    pairs


encodeSearchResponseResultsInnerRating : SearchResponseResultsInnerRating -> Json.Encode.Value
encodeSearchResponseResultsInnerRating =
    encodeObject << encodeSearchResponseResultsInnerRatingPairs


encodeSearchResponseResultsInnerRatingWithTag : ( String, String ) -> SearchResponseResultsInnerRating -> Json.Encode.Value
encodeSearchResponseResultsInnerRatingWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseResultsInnerRatingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseResultsInnerRatingPairs : SearchResponseResultsInnerRating -> List EncodedField
encodeSearchResponseResultsInnerRatingPairs model =
    let
        pairs =
            [ maybeEncode "mean" Json.Encode.float model.mean
            , maybeEncode "count" Json.Encode.float model.count
            ]
    in
    pairs


encodeSearchResponseSorting : SearchResponseSorting -> Json.Encode.Value
encodeSearchResponseSorting =
    encodeObject << encodeSearchResponseSortingPairs


encodeSearchResponseSortingWithTag : ( String, String ) -> SearchResponseSorting -> Json.Encode.Value
encodeSearchResponseSortingWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseSortingPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseSortingPairs : SearchResponseSorting -> List EncodedField
encodeSearchResponseSortingPairs model =
    let
        pairs =
            [ maybeEncodeNullable "key" Json.Encode.string model.key
            , maybeEncodeNullable "direction" Json.Encode.string model.direction
            ]
    in
    pairs


encodeSearchResponseSortingOptionsInner : SearchResponseSortingOptionsInner -> Json.Encode.Value
encodeSearchResponseSortingOptionsInner =
    encodeObject << encodeSearchResponseSortingOptionsInnerPairs


encodeSearchResponseSortingOptionsInnerWithTag : ( String, String ) -> SearchResponseSortingOptionsInner -> Json.Encode.Value
encodeSearchResponseSortingOptionsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchResponseSortingOptionsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchResponseSortingOptionsInnerPairs : SearchResponseSortingOptionsInner -> List EncodedField
encodeSearchResponseSortingOptionsInnerPairs model =
    let
        pairs =
            [ maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "sort" Json.Encode.string model.sort
            , maybeEncode "key" Json.Encode.string model.key
            ]
    in
    pairs


encodeSearchSuggestionResponse : SearchSuggestionResponse -> Json.Encode.Value
encodeSearchSuggestionResponse =
    encodeObject << encodeSearchSuggestionResponsePairs


encodeSearchSuggestionResponseWithTag : ( String, String ) -> SearchSuggestionResponse -> Json.Encode.Value
encodeSearchSuggestionResponseWithTag (tagField, tag) model =
    encodeObject (encodeSearchSuggestionResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchSuggestionResponsePairs : SearchSuggestionResponse -> List EncodedField
encodeSearchSuggestionResponsePairs model =
    let
        pairs =
            [ maybeEncode "results" (Json.Encode.list encodeSearchSuggestionResponseResultsInner) model.results
            ]
    in
    pairs


encodeSearchSuggestionResponseResultsInner : SearchSuggestionResponseResultsInner -> Json.Encode.Value
encodeSearchSuggestionResponseResultsInner =
    encodeObject << encodeSearchSuggestionResponseResultsInnerPairs


encodeSearchSuggestionResponseResultsInnerWithTag : ( String, String ) -> SearchSuggestionResponseResultsInner -> Json.Encode.Value
encodeSearchSuggestionResponseResultsInnerWithTag (tagField, tag) model =
    encodeObject (encodeSearchSuggestionResponseResultsInnerPairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSearchSuggestionResponseResultsInnerPairs : SearchSuggestionResponseResultsInner -> List EncodedField
encodeSearchSuggestionResponseResultsInnerPairs model =
    let
        pairs =
            [ maybeEncode "id" Json.Encode.int model.id
            , maybeEncode "year" Json.Encode.float model.year
            , maybeEncode "name" Json.Encode.string model.name
            , maybeEncode "genre" Json.Encode.string model.genre
            , maybeEncode "image" Json.Encode.string model.image
            , maybeEncode "link" Json.Encode.string model.link
            , maybeEncode "rating" encodeSearchResponseResultsInnerRating model.rating
            , maybeEncode "adult_only" Json.Encode.bool model.adultOnly
            ]
    in
    pairs


encodeSimilarGamesResponse : SimilarGamesResponse -> Json.Encode.Value
encodeSimilarGamesResponse =
    encodeObject << encodeSimilarGamesResponsePairs


encodeSimilarGamesResponseWithTag : ( String, String ) -> SimilarGamesResponse -> Json.Encode.Value
encodeSimilarGamesResponseWithTag (tagField, tag) model =
    encodeObject (encodeSimilarGamesResponsePairs model ++ [ encode tagField Json.Encode.string tag ])


encodeSimilarGamesResponsePairs : SimilarGamesResponse -> List EncodedField
encodeSimilarGamesResponsePairs model =
    let
        pairs =
            [ maybeEncode "results" (Json.Encode.list encodeSearchResponseResultsInner) model.results
            ]
    in
    pairs


-- DECODER


gameResponseDecoder : Json.Decode.Decoder GameResponse
gameResponseDecoder =
    Json.Decode.succeed GameResponse
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "image" Json.Decode.string Nothing
        |> maybeDecode "gameplay" Json.Decode.string Nothing
        |> maybeDecode "link" Json.Decode.string Nothing
        |> maybeDecode "x_url" Json.Decode.string Nothing
        |> maybeDecode "rating" gameResponseRatingDecoder Nothing
        |> maybeDecode "description" Json.Decode.string Nothing
        |> maybeDecode "short_description" Json.Decode.string Nothing
        |> maybeDecode "release_date" Api.Time.dateDecoder Nothing
        |> maybeDecode "developer" Json.Decode.string Nothing
        |> maybeDecode "playtime" gameResponsePlaytimeDecoder Nothing
        |> maybeDecode "platforms" (Json.Decode.list gameResponsePlatformsInnerDecoder) Nothing
        |> maybeDecode "tags" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "genres" (Json.Decode.list gameResponsePlatformsInnerDecoder) Nothing
        |> maybeDecode "genre" Json.Decode.string Nothing
        |> maybeDecode "themes" (Json.Decode.list gameResponsePlatformsInnerDecoder) Nothing
        |> maybeDecode "adult_only" Json.Decode.bool Nothing
        |> maybeDecode "play_modes" (Json.Decode.list gameResponsePlatformsInnerDecoder) Nothing
        |> maybeDecode "screenshots" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "videos" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "offers" (Json.Decode.list gameResponseOffersInnerDecoder) Nothing
        |> maybeDecode "official_stores" (Json.Decode.list gameResponseOfficialStoresInnerDecoder) Nothing
        |> maybeDecode "micro_trailer" Json.Decode.string Nothing


gameResponseOffersInnerDecoder : Json.Decode.Decoder GameResponseOffersInner
gameResponseOffersInnerDecoder =
    Json.Decode.succeed GameResponseOffersInner
        |> maybeDecode "price" gameResponseOffersInnerPriceDecoder Nothing
        |> maybeDecode "store_name" Json.Decode.string Nothing
        |> maybeDecode "platform" Json.Decode.string Nothing
        |> maybeDecode "title" Json.Decode.string Nothing
        |> maybeDecode "url" Json.Decode.string Nothing


gameResponseOffersInnerPriceDecoder : Json.Decode.Decoder GameResponseOffersInnerPrice
gameResponseOffersInnerPriceDecoder =
    Json.Decode.succeed GameResponseOffersInnerPrice
        |> maybeDecode "currency" Json.Decode.string Nothing
        |> maybeDecode "discount_percent" Json.Decode.float Nothing
        |> maybeDecode "value" Json.Decode.float Nothing
        |> maybeDecode "initial" Json.Decode.float Nothing


gameResponseOfficialStoresInnerDecoder : Json.Decode.Decoder GameResponseOfficialStoresInner
gameResponseOfficialStoresInnerDecoder =
    Json.Decode.succeed GameResponseOfficialStoresInner
        |> maybeDecode "source" Json.Decode.string Nothing
        |> maybeDecode "url" Json.Decode.string Nothing


gameResponsePlatformsInnerDecoder : Json.Decode.Decoder GameResponsePlatformsInner
gameResponsePlatformsInnerDecoder =
    Json.Decode.succeed GameResponsePlatformsInner
        |> maybeDecode "value" Json.Decode.string Nothing
        |> maybeDecode "name" Json.Decode.string Nothing


gameResponsePlaytimeDecoder : Json.Decode.Decoder GameResponsePlaytime
gameResponsePlaytimeDecoder =
    Json.Decode.succeed GameResponsePlaytime
        |> maybeDecode "percentiles" (Json.Decode.list Json.Decode.int) Nothing
        |> maybeDecode "min" Json.Decode.int Nothing
        |> maybeDecode "median" Json.Decode.int Nothing
        |> maybeDecode "max" Json.Decode.int Nothing
        |> maybeDecode "mean" Json.Decode.float Nothing
        |> maybeDecode "mentions" Json.Decode.int Nothing


gameResponseRatingDecoder : Json.Decode.Decoder GameResponseRating
gameResponseRatingDecoder =
    Json.Decode.succeed GameResponseRating
        |> maybeDecodeNullable "mean" Json.Decode.float Nothing
        |> maybeDecode "count" Json.Decode.int Nothing
        |> maybeDecodeNullable "mean_players" Json.Decode.float Nothing
        |> maybeDecode "count_players" Json.Decode.int Nothing
        |> maybeDecodeNullable "mean_critics" Json.Decode.float Nothing
        |> maybeDecode "count_critics" Json.Decode.int Nothing


searchResponseDecoder : Json.Decode.Decoder SearchResponse
searchResponseDecoder =
    Json.Decode.succeed SearchResponse
        |> maybeDecode "sorting" searchResponseSortingDecoder Nothing
        |> maybeDecode "active_filter_options" (Json.Decode.list searchResponseActiveFilterOptionsInnerDecoder) Nothing
        |> maybeDecode "query" Json.Decode.string Nothing
        |> maybeDecode "total_results" Json.Decode.int Nothing
        |> maybeDecode "limit" Json.Decode.int Nothing
        |> maybeDecode "offset" Json.Decode.int Nothing
        |> maybeDecode "results" (Json.Decode.list searchResponseResultsInnerDecoder) Nothing
        |> maybeDecode "filter_options" (Json.Decode.list searchResponseFilterOptionsInnerDecoder) Nothing
        |> maybeDecode "sorting_options" (Json.Decode.list searchResponseSortingOptionsInnerDecoder) Nothing


searchResponseActiveFilterOptionsInnerDecoder : Json.Decode.Decoder SearchResponseActiveFilterOptionsInner
searchResponseActiveFilterOptionsInnerDecoder =
    Json.Decode.succeed SearchResponseActiveFilterOptionsInner
        |> maybeDecode "key" Json.Decode.string Nothing
        |> maybeDecode "connection" Json.Decode.string Nothing
        |> maybeDecode "values" (Json.Decode.list searchResponseActiveFilterOptionsInnerValuesInnerDecoder) Nothing


searchResponseActiveFilterOptionsInnerValuesInnerDecoder : Json.Decode.Decoder SearchResponseActiveFilterOptionsInnerValuesInner
searchResponseActiveFilterOptionsInnerValuesInnerDecoder =
    Json.Decode.succeed SearchResponseActiveFilterOptionsInnerValuesInner
        |> maybeDecode "match" Json.Decode.string Nothing
        |> maybeDecode "value" Json.Decode.string Nothing


searchResponseFilterOptionsInnerDecoder : Json.Decode.Decoder SearchResponseFilterOptionsInner
searchResponseFilterOptionsInnerDecoder =
    Json.Decode.succeed SearchResponseFilterOptionsInner
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "key" Json.Decode.string Nothing
        |> maybeDecode "values" (Json.Decode.list searchResponseFilterOptionsInnerValuesInnerDecoder) Nothing


searchResponseFilterOptionsInnerValuesInnerDecoder : Json.Decode.Decoder SearchResponseFilterOptionsInnerValuesInner
searchResponseFilterOptionsInnerValuesInnerDecoder =
    Json.Decode.succeed SearchResponseFilterOptionsInnerValuesInner
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "key" Json.Decode.string Nothing
        |> maybeDecode "count" Json.Decode.float Nothing


searchResponseResultsInnerDecoder : Json.Decode.Decoder SearchResponseResultsInner
searchResponseResultsInnerDecoder =
    Json.Decode.succeed SearchResponseResultsInner
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "year" Json.Decode.float Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "genre" Json.Decode.string Nothing
        |> maybeDecode "image" Json.Decode.string Nothing
        |> maybeDecode "link" Json.Decode.string Nothing
        |> maybeDecode "rating" searchResponseResultsInnerRatingDecoder Nothing
        |> maybeDecode "adult_only" Json.Decode.bool Nothing
        |> maybeDecode "screenshots" (Json.Decode.list Json.Decode.string) Nothing
        |> maybeDecode "micro_trailer" Json.Decode.string Nothing
        |> maybeDecode "gameplay" Json.Decode.string Nothing
        |> maybeDecode "short_description" Json.Decode.string Nothing


searchResponseResultsInnerRatingDecoder : Json.Decode.Decoder SearchResponseResultsInnerRating
searchResponseResultsInnerRatingDecoder =
    Json.Decode.succeed SearchResponseResultsInnerRating
        |> maybeDecode "mean" Json.Decode.float Nothing
        |> maybeDecode "count" Json.Decode.float Nothing


searchResponseSortingDecoder : Json.Decode.Decoder SearchResponseSorting
searchResponseSortingDecoder =
    Json.Decode.succeed SearchResponseSorting
        |> maybeDecodeNullable "key" Json.Decode.string Nothing
        |> maybeDecodeNullable "direction" Json.Decode.string Nothing


searchResponseSortingOptionsInnerDecoder : Json.Decode.Decoder SearchResponseSortingOptionsInner
searchResponseSortingOptionsInnerDecoder =
    Json.Decode.succeed SearchResponseSortingOptionsInner
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "sort" Json.Decode.string Nothing
        |> maybeDecode "key" Json.Decode.string Nothing


searchSuggestionResponseDecoder : Json.Decode.Decoder SearchSuggestionResponse
searchSuggestionResponseDecoder =
    Json.Decode.succeed SearchSuggestionResponse
        |> maybeDecode "results" (Json.Decode.list searchSuggestionResponseResultsInnerDecoder) Nothing


searchSuggestionResponseResultsInnerDecoder : Json.Decode.Decoder SearchSuggestionResponseResultsInner
searchSuggestionResponseResultsInnerDecoder =
    Json.Decode.succeed SearchSuggestionResponseResultsInner
        |> maybeDecode "id" Json.Decode.int Nothing
        |> maybeDecode "year" Json.Decode.float Nothing
        |> maybeDecode "name" Json.Decode.string Nothing
        |> maybeDecode "genre" Json.Decode.string Nothing
        |> maybeDecode "image" Json.Decode.string Nothing
        |> maybeDecode "link" Json.Decode.string Nothing
        |> maybeDecode "rating" searchResponseResultsInnerRatingDecoder Nothing
        |> maybeDecode "adult_only" Json.Decode.bool Nothing


similarGamesResponseDecoder : Json.Decode.Decoder SimilarGamesResponse
similarGamesResponseDecoder =
    Json.Decode.succeed SimilarGamesResponse
        |> maybeDecode "results" (Json.Decode.list searchResponseResultsInnerDecoder) Nothing




-- HELPER


type alias EncodedField =
    Maybe ( String, Json.Encode.Value )


encodeObject : List EncodedField -> Json.Encode.Value
encodeObject =
    Json.Encode.object << List.filterMap identity


encode : String -> (a -> Json.Encode.Value) -> a -> EncodedField
encode key encoder value =
    Just ( key, encoder value )


encodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
encodeNullable key encoder value =
    Just ( key, Maybe.withDefault Json.Encode.null (Maybe.map encoder value) )


maybeEncode : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncode key encoder =
    Maybe.map (Tuple.pair key << encoder)


maybeEncodeNullable : String -> (a -> Json.Encode.Value) -> Maybe a -> EncodedField
maybeEncodeNullable =
    encodeNullable


decode : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decode key decoder =
    decodeChain (Json.Decode.field key decoder)


decodeLazy : (a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeLazy f key decoder =
    decodeChainLazy f (Json.Decode.field key decoder)


decodeNullable : String -> Json.Decode.Decoder a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
decodeNullable key decoder =
    decodeChain (maybeField key decoder Nothing)


decodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeNullableLazy f key decoder =
    decodeChainLazy f (maybeField key decoder Nothing)


maybeDecode : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecode key decoder fallback =
    -- let's be kind to null-values as well
    decodeChain (maybeField key decoder fallback)


maybeDecodeLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeLazy f key decoder fallback =
    -- let's be kind to null-values as well
    decodeChainLazy f (maybeField key decoder fallback)


maybeDecodeNullable : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a -> b) -> Json.Decode.Decoder b
maybeDecodeNullable key decoder fallback =
    decodeChain (maybeField key decoder fallback)


maybeDecodeNullableLazy : (Maybe a -> c) -> String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
maybeDecodeNullableLazy f key decoder fallback =
    decodeChainLazy f (maybeField key decoder fallback)


maybeField : String -> Json.Decode.Decoder a -> Maybe a -> Json.Decode.Decoder (Maybe a)
maybeField key decoder fallback =
    let
        fieldDecoder =
            Json.Decode.field key Json.Decode.value

        valueDecoder =
            Json.Decode.oneOf [ Json.Decode.map Just decoder, Json.Decode.null fallback ]

        decodeObject rawObject =
            case Json.Decode.decodeValue fieldDecoder rawObject of
                Ok rawValue ->
                    case Json.Decode.decodeValue valueDecoder rawValue of
                        Ok value ->
                            Json.Decode.succeed value

                        Err error ->
                            Json.Decode.fail (Json.Decode.errorToString error)

                Err _ ->
                    Json.Decode.succeed fallback
    in
    Json.Decode.value
        |> Json.Decode.andThen decodeObject


decodeChain : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b
decodeChain =
    Json.Decode.map2 (|>)


decodeChainLazy : (a -> c) -> Json.Decode.Decoder a -> Json.Decode.Decoder (c -> b) -> Json.Decode.Decoder b
decodeChainLazy f =
    decodeChain << Json.Decode.map f