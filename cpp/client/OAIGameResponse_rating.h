/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGameResponse_rating.h
 *
 * 
 */

#ifndef OAIGameResponse_rating_H
#define OAIGameResponse_rating_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGameResponse_rating : public OAIObject {
public:
    OAIGameResponse_rating();
    OAIGameResponse_rating(QString json);
    ~OAIGameResponse_rating() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getMean() const;
    void setMean(const float &mean);
    bool is_mean_Set() const;
    bool is_mean_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    float getMeanPlayers() const;
    void setMeanPlayers(const float &mean_players);
    bool is_mean_players_Set() const;
    bool is_mean_players_Valid() const;

    qint32 getCountPlayers() const;
    void setCountPlayers(const qint32 &count_players);
    bool is_count_players_Set() const;
    bool is_count_players_Valid() const;

    float getMeanCritics() const;
    void setMeanCritics(const float &mean_critics);
    bool is_mean_critics_Set() const;
    bool is_mean_critics_Valid() const;

    qint32 getCountCritics() const;
    void setCountCritics(const qint32 &count_critics);
    bool is_count_critics_Set() const;
    bool is_count_critics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_mean;
    bool m_mean_isSet;
    bool m_mean_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    float m_mean_players;
    bool m_mean_players_isSet;
    bool m_mean_players_isValid;

    qint32 m_count_players;
    bool m_count_players_isSet;
    bool m_count_players_isValid;

    float m_mean_critics;
    bool m_mean_critics_isSet;
    bool m_mean_critics_isValid;

    qint32 m_count_critics;
    bool m_count_critics_isSet;
    bool m_count_critics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGameResponse_rating)

#endif // OAIGameResponse_rating_H
