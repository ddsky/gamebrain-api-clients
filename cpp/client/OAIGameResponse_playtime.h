/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGameResponse_playtime.h
 *
 * 
 */

#ifndef OAIGameResponse_playtime_H
#define OAIGameResponse_playtime_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGameResponse_playtime : public OAIObject {
public:
    OAIGameResponse_playtime();
    OAIGameResponse_playtime(QString json);
    ~OAIGameResponse_playtime() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint32> getPercentiles() const;
    void setPercentiles(const QList<qint32> &percentiles);
    bool is_percentiles_Set() const;
    bool is_percentiles_Valid() const;

    qint32 getMin() const;
    void setMin(const qint32 &min);
    bool is_min_Set() const;
    bool is_min_Valid() const;

    qint32 getMedian() const;
    void setMedian(const qint32 &median);
    bool is_median_Set() const;
    bool is_median_Valid() const;

    qint32 getMax() const;
    void setMax(const qint32 &max);
    bool is_max_Set() const;
    bool is_max_Valid() const;

    float getMean() const;
    void setMean(const float &mean);
    bool is_mean_Set() const;
    bool is_mean_Valid() const;

    qint32 getMentions() const;
    void setMentions(const qint32 &mentions);
    bool is_mentions_Set() const;
    bool is_mentions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint32> m_percentiles;
    bool m_percentiles_isSet;
    bool m_percentiles_isValid;

    qint32 m_min;
    bool m_min_isSet;
    bool m_min_isValid;

    qint32 m_median;
    bool m_median_isSet;
    bool m_median_isValid;

    qint32 m_max;
    bool m_max_isSet;
    bool m_max_isValid;

    float m_mean;
    bool m_mean_isSet;
    bool m_mean_isValid;

    qint32 m_mentions;
    bool m_mentions_isSet;
    bool m_mentions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGameResponse_playtime)

#endif // OAIGameResponse_playtime_H
