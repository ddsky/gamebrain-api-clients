/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGameResponse_offers_inner_price.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGameResponse_offers_inner_price::OAIGameResponse_offers_inner_price(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGameResponse_offers_inner_price::OAIGameResponse_offers_inner_price() {
    this->initializeModel();
}

OAIGameResponse_offers_inner_price::~OAIGameResponse_offers_inner_price() {}

void OAIGameResponse_offers_inner_price::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_discount_percent_isSet = false;
    m_discount_percent_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;

    m_initial_isSet = false;
    m_initial_isValid = false;
}

void OAIGameResponse_offers_inner_price::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGameResponse_offers_inner_price::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_discount_percent_isValid = ::OpenAPI::fromJsonValue(m_discount_percent, json[QString("discount_percent")]);
    m_discount_percent_isSet = !json[QString("discount_percent")].isNull() && m_discount_percent_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_initial_isValid = ::OpenAPI::fromJsonValue(m_initial, json[QString("initial")]);
    m_initial_isSet = !json[QString("initial")].isNull() && m_initial_isValid;
}

QString OAIGameResponse_offers_inner_price::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGameResponse_offers_inner_price::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_discount_percent_isSet) {
        obj.insert(QString("discount_percent"), ::OpenAPI::toJsonValue(m_discount_percent));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_initial_isSet) {
        obj.insert(QString("initial"), ::OpenAPI::toJsonValue(m_initial));
    }
    return obj;
}

QString OAIGameResponse_offers_inner_price::getCurrency() const {
    return m_currency;
}
void OAIGameResponse_offers_inner_price::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIGameResponse_offers_inner_price::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIGameResponse_offers_inner_price::is_currency_Valid() const{
    return m_currency_isValid;
}

float OAIGameResponse_offers_inner_price::getDiscountPercent() const {
    return m_discount_percent;
}
void OAIGameResponse_offers_inner_price::setDiscountPercent(const float &discount_percent) {
    m_discount_percent = discount_percent;
    m_discount_percent_isSet = true;
}

bool OAIGameResponse_offers_inner_price::is_discount_percent_Set() const{
    return m_discount_percent_isSet;
}

bool OAIGameResponse_offers_inner_price::is_discount_percent_Valid() const{
    return m_discount_percent_isValid;
}

float OAIGameResponse_offers_inner_price::getValue() const {
    return m_value;
}
void OAIGameResponse_offers_inner_price::setValue(const float &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGameResponse_offers_inner_price::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGameResponse_offers_inner_price::is_value_Valid() const{
    return m_value_isValid;
}

float OAIGameResponse_offers_inner_price::getInitial() const {
    return m_initial;
}
void OAIGameResponse_offers_inner_price::setInitial(const float &initial) {
    m_initial = initial;
    m_initial_isSet = true;
}

bool OAIGameResponse_offers_inner_price::is_initial_Set() const{
    return m_initial_isSet;
}

bool OAIGameResponse_offers_inner_price::is_initial_Valid() const{
    return m_initial_isValid;
}

bool OAIGameResponse_offers_inner_price::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initial_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGameResponse_offers_inner_price::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
