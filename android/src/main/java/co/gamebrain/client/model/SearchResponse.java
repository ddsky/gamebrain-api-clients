/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package co.gamebrain.client.model;

import co.gamebrain.client.model.SearchResponseActiveFilterOptionsInner;
import co.gamebrain.client.model.SearchResponseFilterOptionsInner;
import co.gamebrain.client.model.SearchResponseResultsInner;
import co.gamebrain.client.model.SearchResponseSorting;
import co.gamebrain.client.model.SearchResponseSortingOptionsInner;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SearchResponse {
  
  @SerializedName("sorting")
  private SearchResponseSorting sorting = null;
  @SerializedName("active_filter_options")
  private List<SearchResponseActiveFilterOptionsInner> activeFilterOptions = null;
  @SerializedName("query")
  private String query = null;
  @SerializedName("total_results")
  private Integer totalResults = null;
  @SerializedName("limit")
  private Integer limit = null;
  @SerializedName("offset")
  private Integer offset = null;
  @SerializedName("results")
  private List<SearchResponseResultsInner> results = null;
  @SerializedName("filter_options")
  private List<SearchResponseFilterOptionsInner> filterOptions = null;
  @SerializedName("sorting_options")
  private List<SearchResponseSortingOptionsInner> sortingOptions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public SearchResponseSorting getSorting() {
    return sorting;
  }
  public void setSorting(SearchResponseSorting sorting) {
    this.sorting = sorting;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SearchResponseActiveFilterOptionsInner> getActiveFilterOptions() {
    return activeFilterOptions;
  }
  public void setActiveFilterOptions(List<SearchResponseActiveFilterOptionsInner> activeFilterOptions) {
    this.activeFilterOptions = activeFilterOptions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getQuery() {
    return query;
  }
  public void setQuery(String query) {
    this.query = query;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTotalResults() {
    return totalResults;
  }
  public void setTotalResults(Integer totalResults) {
    this.totalResults = totalResults;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getLimit() {
    return limit;
  }
  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getOffset() {
    return offset;
  }
  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SearchResponseResultsInner> getResults() {
    return results;
  }
  public void setResults(List<SearchResponseResultsInner> results) {
    this.results = results;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SearchResponseFilterOptionsInner> getFilterOptions() {
    return filterOptions;
  }
  public void setFilterOptions(List<SearchResponseFilterOptionsInner> filterOptions) {
    this.filterOptions = filterOptions;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SearchResponseSortingOptionsInner> getSortingOptions() {
    return sortingOptions;
  }
  public void setSortingOptions(List<SearchResponseSortingOptionsInner> sortingOptions) {
    this.sortingOptions = sortingOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponse searchResponse = (SearchResponse) o;
    return (this.sorting == null ? searchResponse.sorting == null : this.sorting.equals(searchResponse.sorting)) &&
        (this.activeFilterOptions == null ? searchResponse.activeFilterOptions == null : this.activeFilterOptions.equals(searchResponse.activeFilterOptions)) &&
        (this.query == null ? searchResponse.query == null : this.query.equals(searchResponse.query)) &&
        (this.totalResults == null ? searchResponse.totalResults == null : this.totalResults.equals(searchResponse.totalResults)) &&
        (this.limit == null ? searchResponse.limit == null : this.limit.equals(searchResponse.limit)) &&
        (this.offset == null ? searchResponse.offset == null : this.offset.equals(searchResponse.offset)) &&
        (this.results == null ? searchResponse.results == null : this.results.equals(searchResponse.results)) &&
        (this.filterOptions == null ? searchResponse.filterOptions == null : this.filterOptions.equals(searchResponse.filterOptions)) &&
        (this.sortingOptions == null ? searchResponse.sortingOptions == null : this.sortingOptions.equals(searchResponse.sortingOptions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.sorting == null ? 0: this.sorting.hashCode());
    result = 31 * result + (this.activeFilterOptions == null ? 0: this.activeFilterOptions.hashCode());
    result = 31 * result + (this.query == null ? 0: this.query.hashCode());
    result = 31 * result + (this.totalResults == null ? 0: this.totalResults.hashCode());
    result = 31 * result + (this.limit == null ? 0: this.limit.hashCode());
    result = 31 * result + (this.offset == null ? 0: this.offset.hashCode());
    result = 31 * result + (this.results == null ? 0: this.results.hashCode());
    result = 31 * result + (this.filterOptions == null ? 0: this.filterOptions.hashCode());
    result = 31 * result + (this.sortingOptions == null ? 0: this.sortingOptions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponse {\n");
    
    sb.append("  sorting: ").append(sorting).append("\n");
    sb.append("  activeFilterOptions: ").append(activeFilterOptions).append("\n");
    sb.append("  query: ").append(query).append("\n");
    sb.append("  totalResults: ").append(totalResults).append("\n");
    sb.append("  limit: ").append(limit).append("\n");
    sb.append("  offset: ").append(offset).append("\n");
    sb.append("  results: ").append(results).append("\n");
    sb.append("  filterOptions: ").append(filterOptions).append("\n");
    sb.append("  sortingOptions: ").append(sortingOptions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
