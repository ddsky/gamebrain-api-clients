/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package co.gamebrain.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class GameResponseRating {
  
  @SerializedName("mean")
  private Float mean = null;
  @SerializedName("count")
  private Integer count = null;
  @SerializedName("mean_players")
  private Float meanPlayers = null;
  @SerializedName("count_players")
  private Integer countPlayers = null;
  @SerializedName("mean_critics")
  private Float meanCritics = null;
  @SerializedName("count_critics")
  private Integer countCritics = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Float getMean() {
    return mean;
  }
  public void setMean(Float mean) {
    this.mean = mean;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getCount() {
    return count;
  }
  public void setCount(Integer count) {
    this.count = count;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Float getMeanPlayers() {
    return meanPlayers;
  }
  public void setMeanPlayers(Float meanPlayers) {
    this.meanPlayers = meanPlayers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getCountPlayers() {
    return countPlayers;
  }
  public void setCountPlayers(Integer countPlayers) {
    this.countPlayers = countPlayers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Float getMeanCritics() {
    return meanCritics;
  }
  public void setMeanCritics(Float meanCritics) {
    this.meanCritics = meanCritics;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getCountCritics() {
    return countCritics;
  }
  public void setCountCritics(Integer countCritics) {
    this.countCritics = countCritics;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameResponseRating gameResponseRating = (GameResponseRating) o;
    return (this.mean == null ? gameResponseRating.mean == null : this.mean.equals(gameResponseRating.mean)) &&
        (this.count == null ? gameResponseRating.count == null : this.count.equals(gameResponseRating.count)) &&
        (this.meanPlayers == null ? gameResponseRating.meanPlayers == null : this.meanPlayers.equals(gameResponseRating.meanPlayers)) &&
        (this.countPlayers == null ? gameResponseRating.countPlayers == null : this.countPlayers.equals(gameResponseRating.countPlayers)) &&
        (this.meanCritics == null ? gameResponseRating.meanCritics == null : this.meanCritics.equals(gameResponseRating.meanCritics)) &&
        (this.countCritics == null ? gameResponseRating.countCritics == null : this.countCritics.equals(gameResponseRating.countCritics));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.mean == null ? 0: this.mean.hashCode());
    result = 31 * result + (this.count == null ? 0: this.count.hashCode());
    result = 31 * result + (this.meanPlayers == null ? 0: this.meanPlayers.hashCode());
    result = 31 * result + (this.countPlayers == null ? 0: this.countPlayers.hashCode());
    result = 31 * result + (this.meanCritics == null ? 0: this.meanCritics.hashCode());
    result = 31 * result + (this.countCritics == null ? 0: this.countCritics.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameResponseRating {\n");
    
    sb.append("  mean: ").append(mean).append("\n");
    sb.append("  count: ").append(count).append("\n");
    sb.append("  meanPlayers: ").append(meanPlayers).append("\n");
    sb.append("  countPlayers: ").append(countPlayers).append("\n");
    sb.append("  meanCritics: ").append(meanCritics).append("\n");
    sb.append("  countCritics: ").append(countCritics).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
