/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package co.gamebrain.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class SearchResponseActiveFilterOptionsInnerValuesInner {
  
  @SerializedName("match")
  private String match = null;
  @SerializedName("value")
  private String value = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMatch() {
    return match;
  }
  public void setMatch(String match) {
    this.match = match;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getValue() {
    return value;
  }
  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponseActiveFilterOptionsInnerValuesInner searchResponseActiveFilterOptionsInnerValuesInner = (SearchResponseActiveFilterOptionsInnerValuesInner) o;
    return (this.match == null ? searchResponseActiveFilterOptionsInnerValuesInner.match == null : this.match.equals(searchResponseActiveFilterOptionsInnerValuesInner.match)) &&
        (this.value == null ? searchResponseActiveFilterOptionsInnerValuesInner.value == null : this.value.equals(searchResponseActiveFilterOptionsInnerValuesInner.value));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.match == null ? 0: this.match.hashCode());
    result = 31 * result + (this.value == null ? 0: this.value.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponseActiveFilterOptionsInnerValuesInner {\n");
    
    sb.append("  match: ").append(match).append("\n");
    sb.append("  value: ").append(value).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
