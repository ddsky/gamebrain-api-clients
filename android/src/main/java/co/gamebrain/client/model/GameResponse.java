/**
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package co.gamebrain.client.model;

import co.gamebrain.client.model.GameResponseOffersInner;
import co.gamebrain.client.model.GameResponseOfficialStoresInner;
import co.gamebrain.client.model.GameResponsePlatformsInner;
import co.gamebrain.client.model.GameResponsePlaytime;
import co.gamebrain.client.model.GameResponseRating;
import java.net.URI;
import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class GameResponse {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("image")
  private URI image = null;
  @SerializedName("gameplay")
  private URI gameplay = null;
  @SerializedName("link")
  private URI link = null;
  @SerializedName("x_url")
  private URI xUrl = null;
  @SerializedName("rating")
  private GameResponseRating rating = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("short_description")
  private String shortDescription = null;
  @SerializedName("release_date")
  private Date releaseDate = null;
  @SerializedName("developer")
  private String developer = null;
  @SerializedName("playtime")
  private GameResponsePlaytime playtime = null;
  @SerializedName("platforms")
  private List<GameResponsePlatformsInner> platforms = null;
  @SerializedName("tags")
  private List<String> tags = null;
  @SerializedName("genres")
  private List<GameResponsePlatformsInner> genres = null;
  @SerializedName("genre")
  private String genre = null;
  @SerializedName("themes")
  private List<GameResponsePlatformsInner> themes = null;
  @SerializedName("adult_only")
  private Boolean adultOnly = null;
  @SerializedName("play_modes")
  private List<GameResponsePlatformsInner> playModes = null;
  @SerializedName("screenshots")
  private List<URI> screenshots = null;
  @SerializedName("videos")
  private List<URI> videos = null;
  @SerializedName("offers")
  private List<GameResponseOffersInner> offers = null;
  @SerializedName("official_stores")
  private List<GameResponseOfficialStoresInner> officialStores = null;
  @SerializedName("micro_trailer")
  private URI microTrailer = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public URI getImage() {
    return image;
  }
  public void setImage(URI image) {
    this.image = image;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public URI getGameplay() {
    return gameplay;
  }
  public void setGameplay(URI gameplay) {
    this.gameplay = gameplay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public URI getLink() {
    return link;
  }
  public void setLink(URI link) {
    this.link = link;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public URI getXUrl() {
    return xUrl;
  }
  public void setXUrl(URI xUrl) {
    this.xUrl = xUrl;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GameResponseRating getRating() {
    return rating;
  }
  public void setRating(GameResponseRating rating) {
    this.rating = rating;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getShortDescription() {
    return shortDescription;
  }
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getReleaseDate() {
    return releaseDate;
  }
  public void setReleaseDate(Date releaseDate) {
    this.releaseDate = releaseDate;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDeveloper() {
    return developer;
  }
  public void setDeveloper(String developer) {
    this.developer = developer;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GameResponsePlaytime getPlaytime() {
    return playtime;
  }
  public void setPlaytime(GameResponsePlaytime playtime) {
    this.playtime = playtime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponsePlatformsInner> getPlatforms() {
    return platforms;
  }
  public void setPlatforms(List<GameResponsePlatformsInner> platforms) {
    this.platforms = platforms;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }
  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponsePlatformsInner> getGenres() {
    return genres;
  }
  public void setGenres(List<GameResponsePlatformsInner> genres) {
    this.genres = genres;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getGenre() {
    return genre;
  }
  public void setGenre(String genre) {
    this.genre = genre;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponsePlatformsInner> getThemes() {
    return themes;
  }
  public void setThemes(List<GameResponsePlatformsInner> themes) {
    this.themes = themes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getAdultOnly() {
    return adultOnly;
  }
  public void setAdultOnly(Boolean adultOnly) {
    this.adultOnly = adultOnly;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponsePlatformsInner> getPlayModes() {
    return playModes;
  }
  public void setPlayModes(List<GameResponsePlatformsInner> playModes) {
    this.playModes = playModes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<URI> getScreenshots() {
    return screenshots;
  }
  public void setScreenshots(List<URI> screenshots) {
    this.screenshots = screenshots;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<URI> getVideos() {
    return videos;
  }
  public void setVideos(List<URI> videos) {
    this.videos = videos;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponseOffersInner> getOffers() {
    return offers;
  }
  public void setOffers(List<GameResponseOffersInner> offers) {
    this.offers = offers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<GameResponseOfficialStoresInner> getOfficialStores() {
    return officialStores;
  }
  public void setOfficialStores(List<GameResponseOfficialStoresInner> officialStores) {
    this.officialStores = officialStores;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public URI getMicroTrailer() {
    return microTrailer;
  }
  public void setMicroTrailer(URI microTrailer) {
    this.microTrailer = microTrailer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameResponse gameResponse = (GameResponse) o;
    return (this.id == null ? gameResponse.id == null : this.id.equals(gameResponse.id)) &&
        (this.name == null ? gameResponse.name == null : this.name.equals(gameResponse.name)) &&
        (this.image == null ? gameResponse.image == null : this.image.equals(gameResponse.image)) &&
        (this.gameplay == null ? gameResponse.gameplay == null : this.gameplay.equals(gameResponse.gameplay)) &&
        (this.link == null ? gameResponse.link == null : this.link.equals(gameResponse.link)) &&
        (this.xUrl == null ? gameResponse.xUrl == null : this.xUrl.equals(gameResponse.xUrl)) &&
        (this.rating == null ? gameResponse.rating == null : this.rating.equals(gameResponse.rating)) &&
        (this.description == null ? gameResponse.description == null : this.description.equals(gameResponse.description)) &&
        (this.shortDescription == null ? gameResponse.shortDescription == null : this.shortDescription.equals(gameResponse.shortDescription)) &&
        (this.releaseDate == null ? gameResponse.releaseDate == null : this.releaseDate.equals(gameResponse.releaseDate)) &&
        (this.developer == null ? gameResponse.developer == null : this.developer.equals(gameResponse.developer)) &&
        (this.playtime == null ? gameResponse.playtime == null : this.playtime.equals(gameResponse.playtime)) &&
        (this.platforms == null ? gameResponse.platforms == null : this.platforms.equals(gameResponse.platforms)) &&
        (this.tags == null ? gameResponse.tags == null : this.tags.equals(gameResponse.tags)) &&
        (this.genres == null ? gameResponse.genres == null : this.genres.equals(gameResponse.genres)) &&
        (this.genre == null ? gameResponse.genre == null : this.genre.equals(gameResponse.genre)) &&
        (this.themes == null ? gameResponse.themes == null : this.themes.equals(gameResponse.themes)) &&
        (this.adultOnly == null ? gameResponse.adultOnly == null : this.adultOnly.equals(gameResponse.adultOnly)) &&
        (this.playModes == null ? gameResponse.playModes == null : this.playModes.equals(gameResponse.playModes)) &&
        (this.screenshots == null ? gameResponse.screenshots == null : this.screenshots.equals(gameResponse.screenshots)) &&
        (this.videos == null ? gameResponse.videos == null : this.videos.equals(gameResponse.videos)) &&
        (this.offers == null ? gameResponse.offers == null : this.offers.equals(gameResponse.offers)) &&
        (this.officialStores == null ? gameResponse.officialStores == null : this.officialStores.equals(gameResponse.officialStores)) &&
        (this.microTrailer == null ? gameResponse.microTrailer == null : this.microTrailer.equals(gameResponse.microTrailer));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.image == null ? 0: this.image.hashCode());
    result = 31 * result + (this.gameplay == null ? 0: this.gameplay.hashCode());
    result = 31 * result + (this.link == null ? 0: this.link.hashCode());
    result = 31 * result + (this.xUrl == null ? 0: this.xUrl.hashCode());
    result = 31 * result + (this.rating == null ? 0: this.rating.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.shortDescription == null ? 0: this.shortDescription.hashCode());
    result = 31 * result + (this.releaseDate == null ? 0: this.releaseDate.hashCode());
    result = 31 * result + (this.developer == null ? 0: this.developer.hashCode());
    result = 31 * result + (this.playtime == null ? 0: this.playtime.hashCode());
    result = 31 * result + (this.platforms == null ? 0: this.platforms.hashCode());
    result = 31 * result + (this.tags == null ? 0: this.tags.hashCode());
    result = 31 * result + (this.genres == null ? 0: this.genres.hashCode());
    result = 31 * result + (this.genre == null ? 0: this.genre.hashCode());
    result = 31 * result + (this.themes == null ? 0: this.themes.hashCode());
    result = 31 * result + (this.adultOnly == null ? 0: this.adultOnly.hashCode());
    result = 31 * result + (this.playModes == null ? 0: this.playModes.hashCode());
    result = 31 * result + (this.screenshots == null ? 0: this.screenshots.hashCode());
    result = 31 * result + (this.videos == null ? 0: this.videos.hashCode());
    result = 31 * result + (this.offers == null ? 0: this.offers.hashCode());
    result = 31 * result + (this.officialStores == null ? 0: this.officialStores.hashCode());
    result = 31 * result + (this.microTrailer == null ? 0: this.microTrailer.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameResponse {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  image: ").append(image).append("\n");
    sb.append("  gameplay: ").append(gameplay).append("\n");
    sb.append("  link: ").append(link).append("\n");
    sb.append("  xUrl: ").append(xUrl).append("\n");
    sb.append("  rating: ").append(rating).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  shortDescription: ").append(shortDescription).append("\n");
    sb.append("  releaseDate: ").append(releaseDate).append("\n");
    sb.append("  developer: ").append(developer).append("\n");
    sb.append("  playtime: ").append(playtime).append("\n");
    sb.append("  platforms: ").append(platforms).append("\n");
    sb.append("  tags: ").append(tags).append("\n");
    sb.append("  genres: ").append(genres).append("\n");
    sb.append("  genre: ").append(genre).append("\n");
    sb.append("  themes: ").append(themes).append("\n");
    sb.append("  adultOnly: ").append(adultOnly).append("\n");
    sb.append("  playModes: ").append(playModes).append("\n");
    sb.append("  screenshots: ").append(screenshots).append("\n");
    sb.append("  videos: ").append(videos).append("\n");
    sb.append("  offers: ").append(offers).append("\n");
    sb.append("  officialStores: ").append(officialStores).append("\n");
    sb.append("  microTrailer: ").append(microTrailer).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
