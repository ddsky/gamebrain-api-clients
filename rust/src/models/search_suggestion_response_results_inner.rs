/*
 * GameBrain API
 *
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchSuggestionResponseResultsInner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "year", skip_serializing_if = "Option::is_none")]
    pub year: Option<f64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "genre", skip_serializing_if = "Option::is_none")]
    pub genre: Option<String>,
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    #[serde(rename = "link", skip_serializing_if = "Option::is_none")]
    pub link: Option<String>,
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<Box<models::SearchResponseResultsInnerRating>>,
    #[serde(rename = "adult_only", skip_serializing_if = "Option::is_none")]
    pub adult_only: Option<bool>,
}

impl SearchSuggestionResponseResultsInner {
    pub fn new() -> SearchSuggestionResponseResultsInner {
        SearchSuggestionResponseResultsInner {
            id: None,
            year: None,
            name: None,
            genre: None,
            image: None,
            link: None,
            rating: None,
            adult_only: None,
        }
    }
}

