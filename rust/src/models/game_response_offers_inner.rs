/*
 * GameBrain API
 *
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GameResponseOffersInner {
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<Box<models::GameResponseOffersInnerPrice>>,
    #[serde(rename = "store_name", skip_serializing_if = "Option::is_none")]
    pub store_name: Option<String>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl GameResponseOffersInner {
    pub fn new() -> GameResponseOffersInner {
        GameResponseOffersInner {
            price: None,
            store_name: None,
            platform: None,
            title: None,
            url: None,
        }
    }
}

