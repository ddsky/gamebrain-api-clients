/*
 * GameBrain API
 *
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResponseResultsInnerRating {
    #[serde(rename = "mean", skip_serializing_if = "Option::is_none")]
    pub mean: Option<f64>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<f64>,
}

impl SearchResponseResultsInnerRating {
    pub fn new() -> SearchResponseResultsInnerRating {
        SearchResponseResultsInnerRating {
            mean: None,
            count: None,
        }
    }
}

