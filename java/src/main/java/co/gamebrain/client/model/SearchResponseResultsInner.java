/*
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.gamebrain.client.model;

import java.util.Objects;
import co.gamebrain.client.model.SearchResponseResultsInnerRating;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import co.gamebrain.client.JSON;

/**
 * SearchResponseResultsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.8.0-SNAPSHOT")
public class SearchResponseResultsInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private BigDecimal year;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_GENRE = "genre";
  @SerializedName(SERIALIZED_NAME_GENRE)
  private String genre;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private URI image;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private SearchResponseResultsInnerRating rating;

  public static final String SERIALIZED_NAME_ADULT_ONLY = "adult_only";
  @SerializedName(SERIALIZED_NAME_ADULT_ONLY)
  private Boolean adultOnly;

  public static final String SERIALIZED_NAME_SCREENSHOTS = "screenshots";
  @SerializedName(SERIALIZED_NAME_SCREENSHOTS)
  private List<URI> screenshots = new ArrayList<>();

  public static final String SERIALIZED_NAME_MICRO_TRAILER = "micro_trailer";
  @SerializedName(SERIALIZED_NAME_MICRO_TRAILER)
  private URI microTrailer;

  public static final String SERIALIZED_NAME_GAMEPLAY = "gameplay";
  @SerializedName(SERIALIZED_NAME_GAMEPLAY)
  private URI gameplay;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "short_description";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public SearchResponseResultsInner() {
  }

  public SearchResponseResultsInner id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public SearchResponseResultsInner year(BigDecimal year) {
    this.year = year;
    return this;
  }

  /**
   * Get year
   * @return year
   */
  @javax.annotation.Nullable
  public BigDecimal getYear() {
    return year;
  }

  public void setYear(BigDecimal year) {
    this.year = year;
  }


  public SearchResponseResultsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SearchResponseResultsInner genre(String genre) {
    this.genre = genre;
    return this;
  }

  /**
   * Get genre
   * @return genre
   */
  @javax.annotation.Nullable
  public String getGenre() {
    return genre;
  }

  public void setGenre(String genre) {
    this.genre = genre;
  }


  public SearchResponseResultsInner image(URI image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nullable
  public URI getImage() {
    return image;
  }

  public void setImage(URI image) {
    this.image = image;
  }


  public SearchResponseResultsInner link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public SearchResponseResultsInner rating(SearchResponseResultsInnerRating rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public SearchResponseResultsInnerRating getRating() {
    return rating;
  }

  public void setRating(SearchResponseResultsInnerRating rating) {
    this.rating = rating;
  }


  public SearchResponseResultsInner adultOnly(Boolean adultOnly) {
    this.adultOnly = adultOnly;
    return this;
  }

  /**
   * Get adultOnly
   * @return adultOnly
   */
  @javax.annotation.Nullable
  public Boolean getAdultOnly() {
    return adultOnly;
  }

  public void setAdultOnly(Boolean adultOnly) {
    this.adultOnly = adultOnly;
  }


  public SearchResponseResultsInner screenshots(List<URI> screenshots) {
    this.screenshots = screenshots;
    return this;
  }

  public SearchResponseResultsInner addScreenshotsItem(URI screenshotsItem) {
    if (this.screenshots == null) {
      this.screenshots = new ArrayList<>();
    }
    this.screenshots.add(screenshotsItem);
    return this;
  }

  /**
   * Get screenshots
   * @return screenshots
   */
  @javax.annotation.Nullable
  public List<URI> getScreenshots() {
    return screenshots;
  }

  public void setScreenshots(List<URI> screenshots) {
    this.screenshots = screenshots;
  }


  public SearchResponseResultsInner microTrailer(URI microTrailer) {
    this.microTrailer = microTrailer;
    return this;
  }

  /**
   * Get microTrailer
   * @return microTrailer
   */
  @javax.annotation.Nullable
  public URI getMicroTrailer() {
    return microTrailer;
  }

  public void setMicroTrailer(URI microTrailer) {
    this.microTrailer = microTrailer;
  }


  public SearchResponseResultsInner gameplay(URI gameplay) {
    this.gameplay = gameplay;
    return this;
  }

  /**
   * Get gameplay
   * @return gameplay
   */
  @javax.annotation.Nullable
  public URI getGameplay() {
    return gameplay;
  }

  public void setGameplay(URI gameplay) {
    this.gameplay = gameplay;
  }


  public SearchResponseResultsInner shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Get shortDescription
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchResponseResultsInner searchResponseResultsInner = (SearchResponseResultsInner) o;
    return Objects.equals(this.id, searchResponseResultsInner.id) &&
        Objects.equals(this.year, searchResponseResultsInner.year) &&
        Objects.equals(this.name, searchResponseResultsInner.name) &&
        Objects.equals(this.genre, searchResponseResultsInner.genre) &&
        Objects.equals(this.image, searchResponseResultsInner.image) &&
        Objects.equals(this.link, searchResponseResultsInner.link) &&
        Objects.equals(this.rating, searchResponseResultsInner.rating) &&
        Objects.equals(this.adultOnly, searchResponseResultsInner.adultOnly) &&
        Objects.equals(this.screenshots, searchResponseResultsInner.screenshots) &&
        Objects.equals(this.microTrailer, searchResponseResultsInner.microTrailer) &&
        Objects.equals(this.gameplay, searchResponseResultsInner.gameplay) &&
        Objects.equals(this.shortDescription, searchResponseResultsInner.shortDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, year, name, genre, image, link, rating, adultOnly, screenshots, microTrailer, gameplay, shortDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchResponseResultsInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    genre: ").append(toIndentedString(genre)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    adultOnly: ").append(toIndentedString(adultOnly)).append("\n");
    sb.append("    screenshots: ").append(toIndentedString(screenshots)).append("\n");
    sb.append("    microTrailer: ").append(toIndentedString(microTrailer)).append("\n");
    sb.append("    gameplay: ").append(toIndentedString(gameplay)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("year");
    openapiFields.add("name");
    openapiFields.add("genre");
    openapiFields.add("image");
    openapiFields.add("link");
    openapiFields.add("rating");
    openapiFields.add("adult_only");
    openapiFields.add("screenshots");
    openapiFields.add("micro_trailer");
    openapiFields.add("gameplay");
    openapiFields.add("short_description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchResponseResultsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchResponseResultsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchResponseResultsInner is not found in the empty JSON string", SearchResponseResultsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchResponseResultsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchResponseResultsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("genre") != null && !jsonObj.get("genre").isJsonNull()) && !jsonObj.get("genre").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `genre` to be a primitive type in the JSON string but got `%s`", jsonObj.get("genre").toString()));
      }
      if ((jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) && !jsonObj.get("image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      // validate the optional field `rating`
      if (jsonObj.get("rating") != null && !jsonObj.get("rating").isJsonNull()) {
        SearchResponseResultsInnerRating.validateJsonElement(jsonObj.get("rating"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("screenshots") != null && !jsonObj.get("screenshots").isJsonNull() && !jsonObj.get("screenshots").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `screenshots` to be an array in the JSON string but got `%s`", jsonObj.get("screenshots").toString()));
      }
      if ((jsonObj.get("micro_trailer") != null && !jsonObj.get("micro_trailer").isJsonNull()) && !jsonObj.get("micro_trailer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `micro_trailer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("micro_trailer").toString()));
      }
      if ((jsonObj.get("gameplay") != null && !jsonObj.get("gameplay").isJsonNull()) && !jsonObj.get("gameplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gameplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gameplay").toString()));
      }
      if ((jsonObj.get("short_description") != null && !jsonObj.get("short_description").isJsonNull()) && !jsonObj.get("short_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `short_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("short_description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchResponseResultsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchResponseResultsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchResponseResultsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchResponseResultsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchResponseResultsInner>() {
           @Override
           public void write(JsonWriter out, SearchResponseResultsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchResponseResultsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchResponseResultsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchResponseResultsInner
   * @throws IOException if the JSON string is invalid with respect to SearchResponseResultsInner
   */
  public static SearchResponseResultsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchResponseResultsInner.class);
  }

  /**
   * Convert an instance of SearchResponseResultsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

