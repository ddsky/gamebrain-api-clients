/*
 * GameBrain API
 * GameBrain API
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: mail@gamebrain.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package co.gamebrain;

import co.gamebrain.client.ApiException;
import co.gamebrain.client.model.GameResponse;
import co.gamebrain.client.model.SearchResponse;
import co.gamebrain.client.model.SearchSuggestionResponse;
import co.gamebrain.client.model.SimilarGamesResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get Game Details
     *
     * Get all the details about a game given its id. Details include screenshots, ratings, release dates, videos, description, tags, and much more.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void detailTest() throws ApiException {
        Integer id = null;
        String apiKey = null;
        GameResponse response = api.detail(id, apiKey);
        // TODO: test validations
    }

    /**
     * Search Games
     *
     * Search hundreds of thousands of video games from over 70 platforms. The query can be a game name, a platform, a genre, or any combination
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchTest() throws ApiException {
        String query = null;
        Integer offset = null;
        Integer limit = null;
        String filters = null;
        String sort = null;
        String sortOrder = null;
        Boolean generateFilterOptions = null;
        String apiKey = null;
        SearchResponse response = api.search(query, offset, limit, filters, sort, sortOrder, generateFilterOptions, apiKey);
        // TODO: test validations
    }

    /**
     * Get Similar Games
     *
     * Get games that are similar to the given one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void similarTest() throws ApiException {
        Integer id = null;
        Integer limit = null;
        String apiKey = null;
        SimilarGamesResponse response = api.similar(id, limit, apiKey);
        // TODO: test validations
    }

    /**
     * Get Game Suggestions
     *
     * Get game suggestions based on (partial) search queries. For example, the query &#39;gt&#39; will return games like GTA.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suggestTest() throws ApiException {
        String query = null;
        Integer limit = null;
        String apiKey = null;
        SearchSuggestionResponse response = api.suggest(query, limit, apiKey);
        // TODO: test validations
    }

}
